{"version":3,"file":"static/js/681.75b306d8.chunk.js","mappings":"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","sources":["images/icons/arrow-right.svg","helpers/randomizeFood.js","pages/RecommendedFoodPage/RecommendedFoodPage.styled.jsx","pages/RecommendedFoodPage/RecommendedFoodPage.js","redux/RecomendedFood/recomendedFoodSelectors.js"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.57007 5.93018L3.50007 12.0002L9.57007 18.0702\",\n    stroke: \"#B6B6B6\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.5 12H3.67\",\n    stroke: \"#B6B6B6\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.be9bceed642802b11548c5b22d986ea8.svg\";\nexport { ForwardRef as ReactComponent };","export const randomizeFood = (array, quantity = 4) => {\n  const randomNumbArr = [];\n\n  while (randomNumbArr.length < quantity) {\n    const randomNumb = Math.floor(Math.random() * array.length);\n\n    if (!randomNumbArr.includes(randomNumb)) {\n      randomNumbArr.push(randomNumb);\n    }\n  }\n\n  return array.filter((_, idx) => randomNumbArr.includes(idx));\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Background = styled.div`\nbackground-color: #050505;\nwidth: 100%;\nflex-direction: column;\ndisplay: flex;\n`\n\nexport const BackLink = styled(NavLink)`\n  display: flex;\n  @media screen and (${props => props.theme.mq.mobile}) {\n    margin-right: 8px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    margin-right: 12px;\n  }\n`;\n\nexport const ArrowReturn = styled.img`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 16px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 24px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-top: 20px;\n  color: ${p => p.theme.colors.white};\n  margin-left: 34px;\n`\nexport const Img = styled.img`\nwidth: 300px;\nheight: 312px;\nmargin-top: 24px;\nmargin-right: 44px;\nmargin-left: 50px;\n@media (min-width: 320px) and (max-width: 833px)  {\n  width: 380px;\n  height: 396px;\n}\n@media (min-width: 834px) and (max-width: 1639px)  {\n  width: 436px;\n  height: 460px;\n}\n`\nexport const Item = styled.li`\nborder-radius: 12px;\nborder: 1px solid black;\ndisplay: flex;\njustify-content: flex-start;\nalign-items: center;\nwidth: 300px;\nheight: 86px;\nmargin-right: 20px;\nmargin-bottom: 20px;\nfont-size: 12px;\nbackground-color:${p => p.theme.colors.black2};\ncolor:${p => p.theme.colors.white};\n\n@media (min-width: 320px) and (max-width: 833px)  {\n  width: 380px;\n}\n@media (min-width: 834px) and (max-width: 1439px)  {\n  width: calc((100% - 60px) / 2);\n  max-width: 328px;\n}\n`\nexport const Container = styled.div`\ndisplay: flex;\n`\nexport const Svg = styled.img`\nwidth: 46px;\nheight: 46px;\nmargin-left:24px;\nmargin-right:20px;\n`\nexport const Parag = styled.p`\nmargin-right: 6px;\n`\nexport const ParagTwo = styled.p`\ncolor:${p => p.theme.colors.gray}\n`\n\nexport const List = styled.ul`\n\n@media (min-width: 320px) and (max-width: 1003px)  {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top:24px;\n}\n@media (min-width: 834px) and (max-width: 1639px)  {\n  display: flex;\nflex-direction: row;\nflex-wrap: wrap;\nalign-items: center;\nwidth: 800px;\n}\n`\nexport const ContainerTwo = styled.div`\ndisplay: flex;\njustify-content: space-around;\n\n@media (min-width: 320px) and (max-width: 1003px)  {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n`","import { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport image from '../../images/Ketogenic.png';\nimport {\n  BackLink,\n  ArrowReturn,\n  Title,\n  Img,\n  Item,\n  Container,\n  Svg,\n  Parag,\n  List,\n  ContainerTwo,\n  ParagTwo,\n  Background,\n} from './RecommendedFoodPage.styled';\n// import food from './food.json';\n\nimport { recomendedFoodInfo } from '../../redux/RecomendedFood/recomendedFoodSelectors';\nimport { getRecomendedFood } from '../../redux/RecomendedFood/recomendedFoodOperations';\nimport { randomizeFood } from '../../helpers/randomizeFood';\n\nimport arrowRight from '../../images/icons/arrow-right.svg';\n\nexport default function RecommendedFood() {\n  const [arrayForRender, setArrayForRender] = useState([]);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/main');\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => async () => {\n      dispatch(getRecomendedFood());\n    },\n    [dispatch]\n  );\n\n  const info = useSelector(recomendedFoodInfo);\n\n  useEffect(() => {\n    if (info.length === 0) {\n      return;\n    }\n    setArrayForRender(randomizeFood(info, 10));\n  }, [info]);\n\n  return (\n    <Background>\n      <BackLink to={backLinkLocationRef.current}>\n        <ArrowReturn src={arrowRight} alt=\"arrow right\" />\n      </BackLink>\n      <Title>Recommented food</Title>\n      <ContainerTwo>\n        <Img src={image} alt=\"Recommended food\" />\n        <List>\n          {arrayForRender.map(({ img, name, amount, calories }) => {\n            return (\n              <Item>\n                <Svg src={img} alt={name} />\n                <div>\n                  <h2>{name}</h2>\n                  <Container>\n                    <Parag>{amount}</Parag>\n                    <ParagTwo>{calories}</ParagTwo>\n                  </Container>\n                </div>\n              </Item>\n            );\n          })}\n        </List>\n      </ContainerTwo>\n    </Background>\n  );\n}\n","export const recomendedFoodInfo = state => state.recomendedFood.info;\n"],"names":["randomizeFood","array","quantity","arguments","length","undefined","randomNumbArr","randomNumb","Math","floor","random","includes","push","filter","_","idx","Background","styled","_templateObject","_taggedTemplateLiteral","BackLink","NavLink","_templateObject2","props","theme","mq","mobile","tablet","ArrowReturn","_templateObject3","Title","_templateObject4","p","colors","white","Img","_templateObject5","Item","_templateObject6","black2","Container","_templateObject7","Svg","_templateObject8","Parag","_templateObject9","ParagTwo","_templateObject10","gray","List","_templateObject11","ContainerTwo","_templateObject12","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","RecommendedFood","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","arrayForRender","setArrayForRender","location","useLocation","backLinkLocationRef","useRef","state","from","dispatch","useDispatch","useEffect","_asyncToGenerator","_callee","_context","getRecomendedFood","info","useSelector","recomendedFoodInfo","_jsxs","children","_jsx","to","current","src","arrowRight","alt","image","map","_ref2","img","amount","calories","recomendedFood"],"sourceRoot":""}