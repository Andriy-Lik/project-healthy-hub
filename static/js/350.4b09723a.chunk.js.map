{"version":3,"file":"static/js/350.4b09723a.chunk.js","mappings":"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","sources":["pages/DashboardPage/DashboardPage.styled.js","images/icons/arrow-right.svg","components/Charts/LineChart.js","components/Charts/ScaleChart.styled.js","components/Charts/ScaleChart.js","pages/DashboardPage/DashboardPage.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const DashboardSection = styled.section`\n  background-color: ${props => props.theme.colors.black};\n  color: ${props => props.theme.colors.white};\n  font-family: ${props => props.theme.fontFamily.poppins};\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    padding-top: 16px;\n    padding-bottom: 60px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    padding-top: 24px;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    padding-top: 20px;\n    padding-bottom: 40px;\n  }\n`;\n\nexport const DashboardContainer = styled.div`\n  margin: 0 auto;\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 320px;\n    padding: 0 10px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 834px;\n    padding: 0 27px;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 1440px;\n    padding: 0 34px;\n  }\n`;\n\nexport const HeaderBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n`;\n\nexport const MainHeaderBlock = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nexport const BackLink = styled(NavLink)`\n  display: flex;\n  @media screen and (${props => props.theme.mq.mobile}) {\n    margin-right: 8px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    margin-right: 12px;\n  }\n`;\n\nexport const ArrowReturn = styled.img`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 16px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 24px;\n  }\n`;\n\nexport const Header = styled.h1`\n  font-weight: ${props => props.theme.fontWeights.medium};\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: 24px;\n    line-height: 1.25;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: ${props => props.theme.fontSizes.xl};\n    line-height: 1.2;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: 12px;\n  padding: 0;\n  border: ${props => props.theme.borders.none};\n  background-color: inherit;\n  color: inherit;\n`;\n\nexport const ToggleButton = styled.button`\n  position: absolute;\n  background-color: ${props => props.theme.colors.black2};\n  border: ${props => props.theme.borders.none};\n  padding: 16px 0 16px 12px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: 0px 4px 14px 0px #e3ffa833;\n  font-family: ${props => props.theme.fontFamily.poppins};\n  font-weight: ${props => props.theme.fontWeights.regular};\n  text-align: left;\n  color: inherit;\n  z-index: 1200;\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    top: 32px;\n    left: 24px;\n    width: 188px;\n    height: 52px;\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.38;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    top: 40px;\n    left: 36px;\n    width: 212px;\n    height: 64px;\n    font-size: ${props => props.theme.fontSizes.l};\n    line-height: 1.45;\n  }\n`;\n\nexport const Arrow = styled.img`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const SecondHeader = styled.h3`\n  font-weight: ${p => p.theme.fontWeights.medium};\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.38;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: 1.33;\n  }\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  margin-bottom: 6px;\n`;\n\nexport const ChartsTitle = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: ${props => props.theme.fontSizes.m};\n    line-height: 1.44;\n    margin-right: 58px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: ${props => props.theme.fontSizes.l};\n    line-height: 1.45;\n    margin-right: 40px;\n  }\n`;\n\nexport const ChartsSubtitle = styled.p`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: 1.43;\n  margin-right: 8px;\n`;\n\nexport const ChartsCaption = styled.span`\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: 1.43;\n  color: ${props => props.theme.colors.gray};\n`;\n\nexport const LineChartBlock = styled.div`\n  display: flex;\n  @media screen and (${props => props.theme.mq.mobile}) {\n    flex-direction: column;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    flex-direction: row;\n    align-items: baseline;\n    justify-content: space-between;\n  }\n`;\n\nexport const ChartGrid = styled.div`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    display: flex;\n    flex-direction: column;\n    overflow-x: scroll;\n    &:not(:last-child) {\n      margin-bottom: 27px;\n    }\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    display: imline-block;\n    overflow-x: hidden;\n    &:not(:last-child) {\n      margin-bottom: 40px;\n    }\n  }\n`;\n\nexport const Chart = styled.div`\n  background-color: ${props => props.theme.colors.black2};\n  border-radius: ${props => props.theme.radii.normal};\n  height: 382px;\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 676px;\n    padding: 25px 20px 24px 14px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 780px;\n    padding: 25px 31px 24px 14px;\n\n    & canvas {\n      min-width: 750px;\n      min-height: auto;\n      margin: 0 auto;\n    }\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 676px;\n    padding: 25px 20px 24px 14px;\n    & canvas {\n      min-width: 640px;\n      min-height: auto;\n    }\n  }\n`;\n\nexport const ScaleChartBlock = styled.div`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    display: flex;\n    flex-direction: column;\n    overflow-x: scroll;\n    margin-top: 27px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    margin-top: 40px;\n    overflow-x: hidden;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    margin-top: 20px;\n  }\n`;\n\nexport const Scale = styled.div`\n  background-color: ${props => props.theme.colors.black2};\n  border-radius: ${props => props.theme.radii.normal};\n  height: 110px;\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 1372px;\n    padding: 24px 24px 36px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 780px;\n    padding: 24px 20px 44px;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 1372px;\n    padding: 24px 24px 36px;\n  }\n`;\n","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.57007 5.93018L3.50007 12.0002L9.57007 18.0702\",\n    stroke: \"#B6B6B6\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.5 12H3.67\",\n    stroke: \"#B6B6B6\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.be9bceed642802b11548c5b22d986ea8.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n\n// import { selectStatsInfo } from '../../redux/Statistics/statisticsSelectors';\n// import { getStats } from '../../redux/Statistics/statisticsOperations';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst LineChart = ({ dataFormat, type }) => {\n  const [time, setTime] = useState([]);\n  const [information, setInformation] = useState([]);\n  // const [average, setAverage] = useState([]);\n\n  // const info = useSelector(selectStatsInfo);\n\n  useEffect(() => {\n    const info = {\n      water: [\n        {\n          water: 2000,\n          createdAt: '2021-07-18T10:40:39.412Z',\n        },\n        {\n          water: 2200,\n          createdAt: '2021-07-18T10:40:39.412Z',\n        },\n        {\n          water: 2000,\n          createdAt: '2022-07-18T10:40:39.412Z',\n        },\n        {\n          water: 2300,\n          createdAt: '2022-07-18T10:40:39.412Z',\n        },\n        {\n          water: 1100,\n          createdAt: '2023-07-18T10:40:39.412Z',\n        },\n        {\n          water: 1400,\n          createdAt: '2023-07-19T10:45:31.168Z',\n        },\n        {\n          water: 1200,\n          createdAt: '2023-07-20T10:45:36.891Z',\n        },\n        {\n          water: 1800,\n          createdAt: '2023-07-21T10:45:45.298Z',\n        },\n        {\n          water: 1600,\n          createdAt: '2023-07-22T10:45:52.200Z',\n        },\n        {\n          water: 1500,\n          createdAt: '2023-08-18T10:40:39.412Z',\n        },\n        {\n          water: 1450,\n          createdAt: '2023-08-19T10:45:31.168Z',\n        },\n        {\n          water: 1415,\n          createdAt: '2023-08-20T10:45:36.891Z',\n        },\n        {\n          water: 2100,\n          createdAt: '2023-08-21T10:45:45.298Z',\n        },\n        {\n          water: 2100,\n          createdAt: '2023-08-22T10:45:52.200Z',\n        },\n        {\n          water: 2300,\n          createdAt: '2023-09-01T10:31:44.390Z',\n        },\n        {\n          water: 1200,\n          createdAt: '2023-09-02T10:32:14.271Z',\n        },\n        {\n          water: 1400,\n          createdAt: '2023-09-03T10:37:49.924Z',\n        },\n        {\n          water: 1450,\n          createdAt: '2023-09-04T10:38:00.932Z',\n        },\n        {\n          water: 1500,\n          createdAt: '2023-09-05T10:38:05.314Z',\n        },\n        {\n          water: 1900,\n          createdAt: '2023-09-06T10:38:07.292Z',\n        },\n        {\n          water: 1800,\n          createdAt: '2023-09-07T10:38:14.494Z',\n        },\n        {\n          water: 1400,\n          createdAt: '2023-09-08T10:38:24.320Z',\n        },\n        {\n          water: 1375,\n          createdAt: '2023-09-09T10:38:30.660Z',\n        },\n        {\n          water: 1350,\n          createdAt: '2023-09-10T10:39:57.559Z',\n        },\n        {\n          water: 1400,\n          createdAt: '2023-09-11T10:40:02.360Z',\n        },\n        {\n          water: 1250,\n          createdAt: '2023-09-12T10:40:10.729Z',\n        },\n        {\n          water: 1300,\n          createdAt: '2023-09-13T10:40:15.384Z',\n        },\n        {\n          water: 1350,\n          createdAt: '2023-09-14T10:40:19.389Z',\n        },\n        {\n          water: 1400,\n          createdAt: '2023-09-15T10:40:25.729Z',\n        },\n        {\n          water: 1425,\n          createdAt: '2023-09-16T10:40:30.223Z',\n        },\n        {\n          water: 1450,\n          createdAt: '2023-09-17T10:40:35.055Z',\n        },\n        {\n          water: 1475,\n          createdAt: '2023-09-18T10:40:39.412Z',\n        },\n        {\n          water: 1450,\n          createdAt: '2023-09-19T10:45:31.168Z',\n        },\n        {\n          water: 1415,\n          createdAt: '2023-09-20T10:45:36.891Z',\n        },\n        {\n          water: 1475,\n          createdAt: '2023-09-21T10:45:45.298Z',\n        },\n        {\n          water: 1500,\n          createdAt: '2023-09-22T10:45:52.200Z',\n        },\n      ],\n    };\n\n    if (Object.keys(info).length === 0) {      \n      return;\n    }\n\n    const currentMonth = new Date().getMonth() + 1;\n    const currentYear = new Date().getFullYear();\n\n    const infoArray = [];\n    const timesArray = [];\n    const averageValue = [];   \n\n    if (Object.keys(info).length !== 0) {\n      const keys = Object.keys(info);\n\n      for (const key of keys) {\n        if (key === 'water') {\n          if (!dataFormat) {\n            for (const entry of info[key]) {\n              const entryDate = new Date(entry.createdAt);\n              const entryMonth = entryDate.getMonth() + 1;\n\n              if (entryMonth === currentMonth) {\n                timesArray.push(entryDate.getDate());\n                infoArray.push(entry.water);\n              }\n            }\n          }\n\n          if (dataFormat) {\n            const groupedData = {};\n            const monthShortName = {\n              1: 'Jan',\n              2: 'Feb',\n              3: 'Mar',\n              4: 'Apr',\n              5: 'May',\n              6: 'June',\n              7: 'July',\n              8: 'Aug',\n              9: 'Sep',\n              10: 'Oct',\n              11: 'Nov',\n              12: 'Dec',\n            };\n\n            for (const entry of info[key]) {\n              const entryDate = new Date(entry.createdAt);\n              const entryMonth = entryDate.getMonth() + 1;\n              const entryYear = entryDate.getFullYear();\n\n              if (entryYear === currentYear) {\n                if (!groupedData[entryMonth]) {\n                  groupedData[entryMonth] = {\n                    totalConsumption: 0,\n                    count: 0,\n                  };\n                }\n\n                groupedData[entryMonth].totalConsumption += entry.water;\n                groupedData[entryMonth].count++;\n              }\n            }\n\n            for (const month in groupedData) {\n              const totalConsumption =\n                groupedData[month].totalConsumption;\n              const count = groupedData[month].count;\n              const average = totalConsumption / count;\n\n              // timesArray.push(parseInt(month));\n              timesArray.push(monthShortName[month]);              \n              infoArray.push(Math.round(average));\n            }\n          }\n        }\n      }\n    }\n\n    const total = infoArray.reduce((previousValue, number) => {\n      return previousValue + number;\n    }, 0);\n    let totalAverageValue = Math.round(total / timesArray.length);\n    averageValue.push(totalAverageValue);\n\n    setInformation(infoArray);\n    setTime(timesArray);\n    // setAverage(averageValue);\n  }, [dataFormat, type]);\n\n\n  let caption = type === 'water' ? 'L' : 'K';\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        ticks: {\n          color: '#B6B6B6',\n        },\n        grid: {\n          display: true,\n          color: '#292928',\n          offset: true,\n        },\n      },\n      y: {\n        beginAtZero: true,\n        min: 0,\n        max: 3000,\n        ticks: {\n          major: {\n            enabled: true,\n          },\n          color: '#B6B6B6',\n          stepSize: 1000,\n          callback: function (value, index, ticks) {\n            if (String(value).length === 1) {\n              return value;\n            }\n            return String(value).slice(0, 1) + `${caption}`;\n          },\n        },\n        border: {\n          display: false,\n        },\n        grid: {\n          display: true,\n          color: '#292928',\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  const data = {\n    labels: time,\n    datasets: [\n      {\n        data: information,\n        label: 'calories',\n        borderColor: '#E3FFA8',\n        borderWidth: 1,\n        pointRadius: 0,\n        tension: 0.5,\n        drawActiveElementsOnTop: true,\n      },\n    ],\n  };\n\n  return (\n    <>\n      <Line options={options} data={data} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Item = styled.li`\n  font-family: ${props => props.theme.fontFamily.poppins};\n  font-weight: ${props => props.theme.fontWeights.regular};\n  text-align: center;\n`;\n\nexport const WeightTitle = styled.p`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: 14px;\n    line-height: 1.43;\n    margin-bottom: 16px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: 10px;\n    line-height: 1.6;\n    margin-bottom: 12px;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    font-size: 14px;\n    line-height: 1.43;\n    margin-bottom: 16px;\n  }\n`;\nexport const DataTitle = styled.p`\n  font-size: 10px;\n  line-height: 1.4;\n  color: ${props => props.theme.colors.gray};\n`;\n","import { useState, useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n\n// import { selectStatsInfo } from '../../redux/Statistics/statisticsSelectors';\nimport { List, Item, WeightTitle, DataTitle } from './ScaleChart.styled';\n\nconst ScaleChart = ({ dataFormat }) => {\n  const [weight, setWeight] = useState([]);\n  // const [average, setAverage] = useState([]);\n\n  // const info = useSelector(selectStatsInfo);\n\n  useEffect(() => {\n    const info = {\n      weight: [\n        { weight: 70, createdAt: '2023-04-11T10:40:02.360Z' },\n        { weight: 70, createdAt: '2023-04-11T10:40:02.360Z' },\n        { weight: 71, createdAt: '2023-05-12T10:40:10.729Z' },\n        { weight: 72, createdAt: '2023-05-13T10:40:15.384Z' },\n        { weight: 70, createdAt: '2023-06-14T10:40:19.389Z' },\n        { weight: 70, createdAt: '2023-06-11T10:40:02.360Z' },\n        { weight: 71, createdAt: '2023-07-12T10:40:10.729Z' },\n        { weight: 72, createdAt: '2023-07-13T10:40:15.384Z' },\n        { weight: 70, createdAt: '2023-07-14T10:40:19.389Z' },\n        { weight: 70, createdAt: '2023-08-11T10:40:02.360Z' },\n        { weight: 71, createdAt: '2023-08-12T10:40:10.729Z' },\n        { weight: 72, createdAt: '2023-08-13T10:40:15.384Z' },\n        { weight: 70, createdAt: '2023-08-14T10:40:19.389Z' },\n        { weight: 69, createdAt: '2023-09-11T10:40:02.360Z' },\n        { weight: 70, createdAt: '2023-09-12T10:40:10.729Z' },\n        { weight: 72, createdAt: '2023-09-13T10:40:15.384Z' },\n        { weight: 70, createdAt: '2023-09-14T10:40:19.389Z' },\n      ],\n    };\n\n    if (Object.keys(info).length === 0) {\n      return;\n    }\n\n    const currentMonth = new Date().getMonth() + 1;\n    const currentYear = new Date().getFullYear();\n\n    const infoArray = [];\n    const averageValue = [];\n\n    if (Object.keys(info).length !== 0) {\n      const keys = Object.keys(info);\n      for (const key of keys) {\n        if (key === 'weight') {\n          const value = [];\n\n          if (!dataFormat) {\n            for (const entry of info[key]) {\n              const entryDate = new Date(entry.createdAt);\n              const entryMonth = entryDate.getMonth() + 1;\n\n              if (entryMonth === currentMonth) {\n                const newNew = {\n                  createdAt: entryDate.getDate(),\n                  weight: entry.weight,\n                };\n                value.push(Math.round(entry.weight));\n                infoArray.push(newNew);\n              }\n            }\n\n            const total = value.reduce((previousValue, number) => {\n              return previousValue + number;\n            }, 0);\n            let totalAverageValue = Math.round(total / value.length);\n            averageValue.push(totalAverageValue);\n            infoArray.sort((a, b) => a.createdAt - b.createdAt);\n          }\n\n          if (dataFormat) {\n            const groupedData = {};\n            const monthShortName = {\n              1: 'January',\n              2: 'February',\n              3: 'March',\n              4: 'April',\n              5: 'May',\n              6: 'June',\n              7: 'July',\n              8: 'August',\n              9: 'September',\n              10: 'October',\n              11: 'November',\n              12: 'December',\n            };\n\n            for (const entry of info[key]) {\n              const entryDate = new Date(entry.createdAt);\n              const entryMonth = entryDate.getMonth() + 1;\n              const entryYear = entryDate.getFullYear();\n\n              if (entryYear === currentYear) {\n                if (!groupedData[entryMonth]) {\n                  groupedData[entryMonth] = {\n                    totalConsumption: 0,\n                    count: 0,\n                  };\n                }\n                groupedData[entryMonth].totalConsumption += entry.weight;\n                groupedData[entryMonth].count++;\n              }\n            }\n            for (const month in groupedData) {\n              const totalConsumption = groupedData[month].totalConsumption;\n              const count = groupedData[month].count;\n              const average = totalConsumption / count;\n\n              const newNew = {\n                createdAt: monthShortName[month],\n                weight: Math.round(average),\n              };\n\n              value.push(Math.round(average));\n              infoArray.push(newNew);\n            }\n\n            const total = value.reduce((previousValue, number) => {\n              return previousValue + number;\n            }, 0);\n            let totalAverageValue = Math.round(total / value.length);\n            averageValue.push(totalAverageValue);\n            infoArray.sort((a, b) => a.createdAt - b.createdAt);\n          }\n        }\n      }\n    }\n\n    // setAverage(averageValue);\n    setWeight(infoArray);\n  }, [dataFormat]);\n\n  return (\n    <List>\n      {weight.map(({ weight, createdAt }) => {\n        return (\n          <Item key={`${weight}+${createdAt}`}>\n            <WeightTitle>{weight}</WeightTitle>\n            <DataTitle>{createdAt}</DataTitle>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default ScaleChart;\n","import { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { getStats } from '../../redux/Statistics/statisticsOperations';\n\nimport {\n  DashboardSection,\n  DashboardContainer,\n  HeaderBlock,\n  MainHeaderBlock,\n  BackLink,\n  ArrowReturn,\n  Header,\n  Button,\n  ToggleButton,\n  Arrow,\n  SecondHeader,\n  TitleContainer,\n  ChartsTitle,\n  ChartsSubtitle,\n  ChartsCaption,\n  LineChartBlock,\n  ChartGrid,\n  Chart,\n  ScaleChartBlock,\n  Scale,\n} from './DashboardPage.styled';\n\nimport arrowDown from '../../images/icons/arrow-down.svg';\nimport arrowRight from '../../images/icons/arrow-right.svg';\nimport LineChart from 'components/Charts/LineChart';\nimport ScaleChart from 'components/Charts/ScaleChart';\n\nconst DashboardPage = () => {\n  const [showYear, setShowYear] = useState(false);\n  const [timeToggleBtn, setTimeToggleBtn] = useState(false);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '');\n\n  const dispatch = useDispatch();  \n\n  useEffect(() => {\n    dispatch(getStats());\n  }, [dispatch]);\n\n  const toggleBtn = () => {\n    setTimeToggleBtn(timeToggleBtn => !timeToggleBtn);\n  };\n\n  const handleChange = () => {\n    setShowYear(showYear => !showYear);\n    toggleBtn();\n  };\n\n  const calories = 1700;\n  const water = 1600;\n  const weight = 68;\n  return (\n    <DashboardSection>\n      <DashboardContainer>\n        <HeaderBlock>\n          <MainHeaderBlock>\n            <BackLink to={backLinkLocationRef.current}>\n              <ArrowReturn src={arrowRight} alt=\"arrow right\" />\n            </BackLink>\n            <Header>{showYear ? 'Last year' : 'Last month'}</Header>\n            <Button onClick={toggleBtn}>\n              <Arrow\n                src={arrowDown}\n                alt=\"arrow\"\n                style={{\n                  transform: timeToggleBtn ? 'rotate(180deg)' : 'rotate(0deg)',\n                }}\n              />\n            </Button>\n            {timeToggleBtn && (\n              <ToggleButton onClick={handleChange}>\n                {showYear ? 'Last month' : 'Last year'}\n              </ToggleButton>\n            )}\n          </MainHeaderBlock>\n          <SecondHeader>{showYear ? '2023' : 'November'}</SecondHeader>\n        </HeaderBlock>\n        <LineChartBlock>\n          <ChartGrid>\n            <TitleContainer>\n              <ChartsTitle>Calories</ChartsTitle>\n              <ChartsSubtitle>\n                Average value: <ChartsCaption>{calories} kg</ChartsCaption>\n              </ChartsSubtitle>\n            </TitleContainer>\n            <Chart>\n              <LineChart dataFormat={showYear} type={'water'} />\n            </Chart>\n          </ChartGrid>\n          <ChartGrid>\n            <TitleContainer>\n              <ChartsTitle>Water</ChartsTitle>\n              <ChartsSubtitle>\n                Average value: <ChartsCaption>{water} ml</ChartsCaption>\n              </ChartsSubtitle>\n            </TitleContainer>\n            <Chart>\n              <LineChart dataFormat={showYear} type={'water'} />\n            </Chart>\n          </ChartGrid>\n        </LineChartBlock>\n        <ScaleChartBlock>\n          <TitleContainer>\n            <ChartsTitle>Weight</ChartsTitle>\n            <ChartsSubtitle>\n              Average value: <ChartsCaption>{weight} kg</ChartsCaption>\n            </ChartsSubtitle>\n          </TitleContainer>\n          <Scale>\n            <ScaleChart dataFormat={showYear} />\n          </Scale>\n        </ScaleChartBlock>\n      </DashboardContainer>\n    </DashboardSection>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["DashboardSection","styled","_templateObject","_taggedTemplateLiteral","props","theme","colors","black","white","fontFamily","poppins","mq","mobile","tablet","desktop","DashboardContainer","_templateObject2","HeaderBlock","_templateObject3","MainHeaderBlock","_templateObject4","BackLink","NavLink","_templateObject5","ArrowReturn","_templateObject6","Header","_templateObject7","fontWeights","medium","fontSizes","xl","Button","_templateObject8","borders","none","ToggleButton","_templateObject9","black2","p","radii","normal","regular","s","l","Arrow","_templateObject10","SecondHeader","_templateObject11","m","TitleContainer","_templateObject12","ChartsTitle","_templateObject13","ChartsSubtitle","_templateObject14","xs","ChartsCaption","_templateObject15","gray","LineChartBlock","_templateObject16","ChartGrid","_templateObject17","Chart","_templateObject18","ScaleChartBlock","_templateObject19","Scale","_templateObject20","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","_ref","dataFormat","type","_useState","useState","_useState2","_slicedToArray","time","setTime","_useState3","_useState4","information","setInformation","useEffect","info","water","createdAt","Object","keys","length","currentMonth","Date","getMonth","currentYear","getFullYear","infoArray","timesArray","_i","_keys","key","_step","_iterator","_createForOfIteratorHelper","n","done","entry","value","entryDate","push","getDate","err","e","f","_step2","groupedData","monthShortName","_iterator2","entryMonth","totalConsumption","count","month","average","Math","round","total","reduce","previousValue","number","totalAverageValue","caption","options","responsive","scales","x","ticks","color","grid","display","offset","y","beginAtZero","min","max","major","enabled","stepSize","callback","index","String","slice","concat","border","plugins","legend","data","labels","datasets","label","borderColor","borderWidth","pointRadius","tension","drawActiveElementsOnTop","_jsx","_Fragment","children","Line","List","Item","WeightTitle","DataTitle","weight","setWeight","averageValue","newNew","sort","a","b","map","_ref2","_jsxs","_location$state$from","_location$state","showYear","setShowYear","timeToggleBtn","setTimeToggleBtn","location","useLocation","backLinkLocationRef","useRef","state","from","dispatch","useDispatch","getStats","toggleBtn","to","current","src","arrowRight","alt","onClick","arrowDown","style","transform","LineChart","ScaleChart"],"sourceRoot":""}