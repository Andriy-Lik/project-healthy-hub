{"version":3,"file":"static/js/550.faa4fe4e.chunk.js","mappings":"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","sources":["images/icons/arrow-right.svg","pages/DashboardPage/DashboardPage.styled.js","constants/monthName.js","components/Charts/ScaleLineCharts.styled.js","components/Charts/LineChart.js","components/Charts/ScaleChart.js","pages/DashboardPage/DashboardPage.js","redux/Statistics/statisticsSelectors.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.57007 5.93018L3.50007 12.0002L9.57007 18.0702\",\n    stroke: \"#B6B6B6\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.5 12H3.67\",\n    stroke: \"#B6B6B6\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.be9bceed642802b11548c5b22d986ea8.svg\";\nexport { ForwardRef as ReactComponent };","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const DashboardSection = styled.section`  \n  background-color: ${props => props.theme.colors.black};\n  color: ${props => props.theme.colors.white};\n  font-family: ${props => props.theme.fontFamily.poppins};\n`;\n\nexport const DashboardContainer = styled.div`\n  margin: 0 auto;\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 320px;\n    padding: 16px 10px 60px;    \n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 834px;\n    padding: 24px 27px 60px;    \n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 1440px;\n    padding: 20px 34px 40px;   \n  }\n`;\n\nexport const HeaderBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n`;\n\nexport const MainHeaderBlock = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nexport const BackLink = styled(NavLink)`\n  display: flex;\n  @media screen and (${props => props.theme.mq.mobile}) {\n    margin-right: 8px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    margin-right: 12px;\n  }\n`;\n\nexport const ArrowReturn = styled.img`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 16px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 24px;\n  }\n`;\n\nexport const Header = styled.h1`\n  font-weight: ${props => props.theme.fontWeights.medium};\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: 24px;\n    line-height: 1.25;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: ${props => props.theme.fontSizes.xl};\n    line-height: 1.2;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: 12px;\n  padding: 0;\n  border: ${props => props.theme.borders.none};\n  background-color: inherit;\n  color: inherit;\n`;\n\nexport const ToggleButton = styled.button`\n  position: absolute;\n  background-color: ${props => props.theme.colors.black2};\n  border: ${props => props.theme.borders.none};\n  padding: 16px 0 16px 12px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: 0px 4px 14px 0px #e3ffa833;\n  font-family: ${props => props.theme.fontFamily.poppins};\n  font-weight: ${props => props.theme.fontWeights.regular};\n  text-align: left;\n  color: inherit;\n  z-index: 1200;\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    top: 32px;\n    left: 24px;\n    width: 188px;\n    height: 52px;\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.38;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    top: 40px;\n    left: 36px;\n    width: 212px;\n    height: 64px;\n    font-size: ${props => props.theme.fontSizes.l};\n    line-height: 1.45;\n  }\n`;\n\nexport const Arrow = styled.img`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const SecondHeader = styled.h3`\n  font-weight: ${p => p.theme.fontWeights.medium};\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.38;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: 1.33;\n  }\n`;\n\nexport const LineChartBlock = styled.div`\n  display: flex;\n  @media screen and (${props => props.theme.mq.mobile}) {\n    flex-direction: column;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    flex-direction: row;\n    align-items: baseline;\n    justify-content: space-between;\n  }\n`;\n\nexport const ChartGrid = styled.div`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    display: flex;\n    flex-direction: column;\n    overflow-x: scroll;\n    &:not(:last-child) {\n      margin-bottom: 27px;\n    }\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    display: imline-block;\n    overflow-x: hidden;\n    &:not(:last-child) {\n      margin-bottom: 40px;\n    }\n  }\n`;\n\nexport const ScaleChartBlock = styled.div`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    display: flex;\n    flex-direction: column;\n    overflow-x: scroll;\n    margin-top: 27px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    margin-top: 40px;\n    overflow-x: hidden;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    margin-top: 20px;\n  }\n`;\n","const full = {\n  1: 'January',\n  2: 'February',\n  3: 'March',\n  4: 'April',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'August',\n  9: 'September',\n  10: 'October',\n  11: 'November',\n  12: 'December',\n};\n\nconst short = {\n  1: 'Jan',\n  2: 'Feb',\n  3: 'Mar',\n  4: 'Apr',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'Aug',\n  9: 'Sep',\n  10: 'Oct',\n  11: 'Nov',\n  12: 'Dec',\n};\n\nexport const monthName = {\n  full,\n  short,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport const Item = styled.li`\n  font-family: ${props => props.theme.fontFamily.poppins};\n  font-weight: ${props => props.theme.fontWeights.regular};\n  text-align: center;\n  &:not(:last-child) {\n    margin-right: 13px;\n  }\n`;\n\nexport const WeightTitle = styled.p`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: 14px;\n    line-height: 1.43;\n    margin-bottom: 16px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: 10px;\n    line-height: 1.6;\n    margin-bottom: 12px;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    font-size: 14px;\n    line-height: 1.43;\n    margin-bottom: 16px;\n  }\n`;\nexport const DataTitle = styled.p`\n  font-size: 10px;\n  line-height: 1.4;\n  color: ${props => props.theme.colors.gray};\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  margin-bottom: 6px;\n`;\n\nexport const ChartsTitle = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: ${props => props.theme.fontSizes.m};\n    line-height: 1.44;\n    margin-right: 58px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: ${props => props.theme.fontSizes.l};\n    line-height: 1.45;\n    margin-right: 40px;\n  }\n`;\n\nexport const ChartsSubtitle = styled.p`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: 1.43;\n  margin-right: 8px;\n`;\n\nexport const ChartsCaption = styled.span`\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: 1.43;\n  color: ${props => props.theme.colors.gray};\n`;\n\nexport const Chart = styled.div`\n  position: relative;\n  background-color: ${props => props.theme.colors.black2};\n  border-radius: ${props => props.theme.radii.normal};\n  height: 382px;\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 676px;\n    padding: 25px 20px 24px 14px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 780px;\n    padding: 25px 31px 24px 14px;\n\n    & canvas {\n      min-width: 750px;\n      min-height: auto;\n      margin: 0 auto;\n    }\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 676px;\n    padding: 25px 20px 24px 14px;\n    & canvas {\n      min-width: 640px;\n      min-height: auto;\n    }\n  }\n`;\n\nexport const ChartLabelBlock = styled.div`\n  width: 90px;\n  height: 76px;\n  position: absolute;\n  opacity: 0;\n  top: 0;\n  left: 0;\n  padding: 8px 6px;\n  border-radius: 8px;\n  box-shadow: 0px 4px 14px 0px rgba(227, 255, 168, 0.2);\n`;\n\nexport const ChartLabelContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-family: ${props => props.theme.fontFamily.poppins};\n  & > p {\n    font-size: ${props => props.theme.fontSizes.xl};\n    font-weight: ${props => props.theme.fontWeights.medium};\n    line-height: 1.19;\n  }\n\n  & > span {\n    font-size: ${props => props.theme.fontSizes.xs};\n    font-weight: ${props => props.theme.fontWeights.regular};\n    line-height: 1.43;\n    color: ${props => props.theme.colors.gray};\n  }\n`;\n\nexport const Scale = styled.div`\n  background-color: ${props => props.theme.colors.black2};\n  border-radius: ${props => props.theme.radii.normal};\n  height: 110px;\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 1372px;\n    padding: 24px 24px 36px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 780px;\n    padding: 24px 20px 44px;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 1372px;\n    padding: 24px 24px 36px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectStatsInfo } from '../../redux/Statistics/statisticsSelectors';\nimport { monthName } from '../../constants/monthName';\n\nimport {\n  TitleContainer,\n  ChartsTitle,\n  ChartsSubtitle,\n  ChartsCaption,\n  Chart,\n  ChartLabelBlock,\n  ChartLabelContent,\n} from './ScaleLineCharts.styled.js';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst LineChart = ({ dataFormat, type }) => {\n  const [time, setTime] = useState([]);\n  const [information, setInformation] = useState([]);\n  const [average, setAverage] = useState(0);\n\n  const info = useSelector(selectStatsInfo);\n\n  useEffect(() => {\n    if (Object.keys(info).length === 0) {\n      return;\n    }\n\n    const infoArray = [];\n    const timesArray = [];\n\n    if (Object.keys(info).length !== 0) {\n      const keys = Object.keys(info);\n\n      for (const key of keys) {\n        if (key === type) {\n          if (!dataFormat) {\n            for (const entry of info[key]) {\n              timesArray.push(entry._id);\n              infoArray.push(entry.amount);\n            }\n          }\n\n          if (dataFormat) {\n            for (const entry of info[key]) {\n              const entryMonth = new Date(entry._id).getMonth() + 1;\n\n              const average = entry.amount / entry.count;\n\n              timesArray.push(monthName.short[entryMonth]);\n              infoArray.push(Math.round(average));\n            }\n          }\n        }\n      }\n    }\n\n    if (infoArray.length > 0) {\n      const total = Math.round(\n        infoArray.reduce((previousValue, number) => {\n          return previousValue + number;\n        }, 0) / infoArray.length\n      );\n      setAverage(total);\n    }\n\n    setInformation(infoArray);\n    setTime(timesArray);\n  }, [info, dataFormat, type]);\n\n  let caption = type === 'water' ? 'L' : 'K';\n  const yScaleMax = Math.max(...information) + 1000;\n\n  const options = {\n    interaction: {\n      mode: 'index',\n      intersect: false,\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n        position: 'nearest',\n        external: context => {\n          const { chart, tooltip } = context;\n          let tooltipEl = chart.canvas.parentNode.querySelector('div');\n          let tooltipTitle = chart.canvas.parentNode.querySelector('#value');\n\n          if (tooltip.opacity === 0) {\n            tooltipEl.style.opacity = 0;\n            return;\n          }\n\n          const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas;\n\n          tooltipEl.style.opacity = 1;\n          tooltipEl.style.left = positionX + tooltip.caretX + 'px';\n          tooltipEl.style.top = positionY + tooltip.caretY - '84' + 'px';\n          tooltipTitle.textContent =\n            context.tooltip.dataPoints[0].formattedValue;\n        },\n      },\n    },\n    indexAxis: 'x',\n    scales: {\n      x: {\n        alignToPixels: true,\n        beginAtZero: false,\n        offset: true,\n        ticks: {\n          color: '#B6B6B6',\n          padding: 6,\n          font: {\n            family: 'Poppins',\n            size: 10,\n          },\n        },\n        grid: {\n          display: true,\n          color: '#292928',\n          offset: true,\n        },\n      },\n      y: {\n        alignToPixels: true,\n        beginAtZero: true,\n        min: 0,\n        max: yScaleMax,\n        ticks: {\n          alignToPixels: true,\n          major: {\n            enabled: true,\n          },\n          color: '#B6B6B6',\n          stepSize: 1000,\n          callback: function (value, index, ticks) {\n            if (String(value).length === 1) {\n              return value;\n            }\n            return String(value).slice(0, 1) + `${caption}`;\n          },\n          padding: 8,\n          font: {\n            family: 'Poppins',\n            size: 10,\n          },\n        },\n        border: {\n          display: false,\n        },\n        grid: {\n          display: true,\n          color: '#292928',\n        },\n      },\n    },\n  };\n\n  const data = {\n    labels: time,\n    datasets: [\n      {\n        data: information,\n        borderColor: '#E3FFA8',\n        borderWidth: 1,\n        pointRadius: 0,\n        pointHoverBackgroundColor: '#E3FFA8',\n        hitRadius: 5,\n        pointHoverRadius: 5,\n        tension: 0.5,\n        drawActiveElementsOnTop: true,\n      },\n    ],\n  };\n\n  return (\n    <>\n      <TitleContainer>\n        <ChartsTitle>{type === 'water' ? 'Water' : 'Calories'}</ChartsTitle>\n        <ChartsSubtitle>\n          Average value:{' '}\n          <ChartsCaption>\n            {average} {type === 'water' ? 'ml' : 'cal'}\n          </ChartsCaption>\n        </ChartsSubtitle>\n      </TitleContainer>\n      <Chart>\n        <Line options={options} data={data} />\n        <ChartLabelBlock>\n          <ChartLabelContent>\n            <p id=\"value\"></p>\n            <span>{type === 'water' ? 'milliliters' : 'calories'}</span>\n          </ChartLabelContent>\n        </ChartLabelBlock>\n      </Chart>\n    </>\n  );\n};\n\nLineChart.propTypes = {\n  dataFormat: PropTypes.bool.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default LineChart;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectStatsInfo } from '../../redux/Statistics/statisticsSelectors';\nimport { monthName } from '../../constants/monthName';\nimport {\n  List,\n  Item,\n  WeightTitle,\n  DataTitle,\n  TitleContainer,\n  ChartsTitle,\n  ChartsSubtitle,\n  ChartsCaption,\n  Scale,\n} from './ScaleLineCharts.styled';\n\nconst ScaleChart = ({ dataFormat }) => {\n  const [weight, setWeight] = useState([]);\n  const [average, setAverage] = useState(0);\n\n  const info = useSelector(selectStatsInfo);\n\n  useEffect(() => {\n    if (Object.keys(info).length === 0) {\n      return;\n    }\n\n    const infoArray = [];\n\n    if (Object.keys(info).length !== 0) {\n      const keys = Object.keys(info);\n      for (const key of keys) {\n        if (key === 'weight') {\n          const value = [];\n\n          if (!dataFormat) {\n            for (const entry of info[key]) {\n              if (entry.count) {\n                return;\n              }\n              // const average = (entry.amount / entry.count).toFixed(1);\n\n              value.push(entry.amount);\n              // value.push(Number(average));\n            }\n            setWeight(info[key]);\n          }\n\n          if (dataFormat) {\n            for (const entry of info[key]) {\n              const entryMonth = new Date(entry._id).getMonth() + 1;\n\n              if (!entry.count) {\n                return;\n              }\n\n              const average = (entry.amount / entry.count).toFixed(1);\n\n              if (average) {\n                const newInfo = {\n                  _id: monthName.full[entryMonth],\n                  amount: average,\n                };\n                infoArray.push(newInfo);\n                value.push(Number(average));\n              }\n            }\n            setWeight(infoArray);\n          }\n\n          if (value.length > 0) {\n            const total = Math.round(\n              value.reduce((previousValue, number) => {\n                return previousValue + number;\n              }, 0) / value.length\n            );\n            setAverage(total);\n          }\n        }\n      }\n    }\n  }, [dataFormat, info]);\n\n  return (\n    <>\n      <TitleContainer>\n        <ChartsTitle>Weight</ChartsTitle>\n        <ChartsSubtitle>\n          Average value: <ChartsCaption>{average} kg</ChartsCaption>\n        </ChartsSubtitle>\n      </TitleContainer>\n      <Scale>\n        <List>\n          {weight.map(({ _id, amount }) => {\n            return (\n              <Item key={`${_id}+${amount}`}>\n                <WeightTitle>{amount}</WeightTitle>\n                <DataTitle>{_id}</DataTitle>\n              </Item>\n            );\n          })}\n        </List>\n      </Scale>\n    </>\n  );\n};\n\nScaleChart.propTypes = {\n  dataFormat: PropTypes.bool.isRequired,\n};\n\nexport default ScaleChart;\n","import { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getStats } from '../../redux/Statistics/statisticsOperations';\nimport { selectStatsIsLoading } from '../../redux/Statistics/statisticsSelectors';\nimport Loader from '../../components/Loader';\n\nimport {\n  DashboardSection,\n  DashboardContainer,\n  HeaderBlock,\n  MainHeaderBlock,\n  BackLink,\n  ArrowReturn,\n  Header,\n  Button,\n  ToggleButton,\n  Arrow,\n  SecondHeader,\n  LineChartBlock,\n  ChartGrid,\n  ScaleChartBlock,\n} from './DashboardPage.styled';\n\nimport arrowDown from '../../images/icons/arrow-down.svg';\nimport arrowRight from '../../images/icons/arrow-right.svg';\nimport LineChart from 'components/Charts/LineChart';\nimport ScaleChart from 'components/Charts/ScaleChart';\nimport { monthName } from '../../constants/monthName';\n\nconst DashboardPage = () => {\n  const [showYear, setShowYear] = useState(false);\n  const [timeToggleBtn, setTimeToggleBtn] = useState(false);\n  const [period, setPeriod] = useState('month');\n\n  const isLoading = useSelector(selectStatsIsLoading);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/main');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getStats(period));\n  }, [dispatch, period]);\n\n  const toggleBtn = () => {\n    setTimeToggleBtn(timeToggleBtn => !timeToggleBtn);\n  };\n\n  const handleChange = () => {\n    setShowYear(showYear => !showYear);\n    setPeriod(prevTime => (prevTime === 'month' ? 'year' : 'month'));\n    toggleBtn();\n  };\n\n  const currentMonth = monthName.full[new Date().getMonth() + 1];\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <DashboardSection>\n      <DashboardContainer>\n        {isLoading && <Loader />}\n        <HeaderBlock>\n          <MainHeaderBlock>\n            <BackLink\n              onClick={() => dispatch(getStats('today'))}\n              to={backLinkLocationRef.current}\n            >\n              <ArrowReturn src={arrowRight} alt=\"arrow right\" />\n            </BackLink>\n            <Header>{showYear ? 'Last year' : 'Last month'}</Header>\n            <Button onClick={toggleBtn}>\n              <Arrow\n                src={arrowDown}\n                alt=\"arrow\"\n                style={{\n                  transform: timeToggleBtn ? 'rotate(180deg)' : 'rotate(0deg)',\n                }}\n              />\n            </Button>\n            {timeToggleBtn && (\n              <ToggleButton onClick={handleChange}>\n                {showYear ? 'Last month' : 'Last year'}\n              </ToggleButton>\n            )}\n          </MainHeaderBlock>\n          <SecondHeader>\n            {showYear ? `${currentYear}` : `${currentMonth}`}\n          </SecondHeader>\n        </HeaderBlock>\n        <LineChartBlock>\n          <ChartGrid>\n            <LineChart dataFormat={showYear} type={'calories'} />\n          </ChartGrid>\n          <ChartGrid>\n            <LineChart dataFormat={showYear} type={'water'} />\n          </ChartGrid>\n        </LineChartBlock>\n        <ScaleChartBlock>\n          <ScaleChart dataFormat={showYear} />\n        </ScaleChartBlock>\n      </DashboardContainer>\n    </DashboardSection>\n  );\n};\n\nexport default DashboardPage;\n","import { createSelector } from '@reduxjs/toolkit';\n\n// цей селетор повертає загальну статистику (об'єкт)\nexport const selectStatsInfo = state => state.stats.info;\n\n// цей селектор повертає булеве значення загрузки з бекенда (булеве значення)\nexport const selectStatsIsLoading = state => state.stats.isLoading;\n\n// цей селектор повертає масив споживання по їжі за день (масив)\nexport const selectIntakeFoodPerDay = state => state.stats.info.food;\n\n// цей селетор повертає к-сть спожитої води за день (число)\nexport const selectStatsConsumedWaterPerDay = createSelector(\n  [selectStatsInfo],\n  stats => {\n    const keys = Object.keys(stats);\n    for (const key of keys) {\n      if (key === 'water') {\n        if (stats[key].length === 0) return 0;\n        for (const entry of stats[key]) {\n          return entry.water;\n        }\n      }\n    }\n  }\n);\n\nconst getProductsByMealType = (products, inputMealType) => {\n  return products.filter(({ mealType }) => mealType === inputMealType);\n};\n\n// цей селектор повертає масив продуктів спожитих на сніданок (масив)\nexport const selectConsumedProductsForBreakfast = createSelector(\n  [selectIntakeFoodPerDay],\n  intakeFood => getProductsByMealType(intakeFood, 'Breakfast')\n);\n\n// цей селектор повертає масив продуктів спожитих на обід (масив)\nexport const selectConsumedProductsForLunch = createSelector(\n  [selectIntakeFoodPerDay],\n  intakeFood => getProductsByMealType(intakeFood, 'Lunch')\n);\n\n// цей селектор повертає масив продуктів спожитих на вечерю (масив)\nexport const selectConsumedProductsForDinner = createSelector(\n  [selectIntakeFoodPerDay],\n  intakeFood => getProductsByMealType(intakeFood, 'Dinner')\n);\n\n// цей селектор повертає масив продуктів спожитих на перекус (масив)\nexport const selectConsumedProductsForSnack = createSelector(\n  [selectIntakeFoodPerDay],\n  intakeFood => getProductsByMealType(intakeFood, 'Snack')\n);\n\nconst calculateSumMacronutrients = (products, inputMacronutrient) => {\n  return products.reduce(\n    (acc, product) => (acc += product[inputMacronutrient]),\n    0\n  );\n};\n\n// цей селетор повертає к-сть спожитих вугеводів на сніданок (число)\nexport const selectConsumedCarbonohidratesForBreakfast = createSelector(\n  [selectConsumedProductsForBreakfast],\n  products => calculateSumMacronutrients(products, 'carbohydrate')\n);\n\n// цей селетор повертає к-сть спожитих білків на сніданок (число)\nexport const selectConsumedProteinForBreakfast = createSelector(\n  [selectConsumedProductsForBreakfast],\n  products => calculateSumMacronutrients(products, 'protein')\n);\n\n// цей селетор повертає к-сть спожитих жирів на сніданок (число)\nexport const selectConsumedFatForBreakfast = createSelector(\n  [selectConsumedProductsForBreakfast],\n  products => calculateSumMacronutrients(products, 'fat')\n);\n\n// цей селетор повертає к-сть спожитих вугеводів на обід (число)\nexport const selectConsumedCarbonohidratesForLunch = createSelector(\n  [selectConsumedProductsForLunch],\n  products => calculateSumMacronutrients(products, 'carbohydrate')\n);\n\n// цей селетор повертає к-сть спожитих білків на обід (число)\nexport const selectConsumedProteinForLunch = createSelector(\n  [selectConsumedProductsForLunch],\n  products => calculateSumMacronutrients(products, 'protein')\n);\n\n// цей селетор повертає к-сть спожитих жирів на обід (число)\nexport const selectConsumedFatForLunch = createSelector(\n  [selectConsumedProductsForLunch],\n  products => calculateSumMacronutrients(products, 'fat')\n);\n\n// цей селетор повертає к-сть спожитих вугеводів на вечерю (число)\nexport const selectConsumedCarbonohidratesForDinner = createSelector(\n  [selectConsumedProductsForDinner],\n  products => calculateSumMacronutrients(products, 'carbohydrate')\n);\n\n// цей селетор повертає к-сть спожитих білків на вечерю (число)\nexport const selectConsumedProteinForDinner = createSelector(\n  [selectConsumedProductsForDinner],\n  products => calculateSumMacronutrients(products, 'protein')\n);\n\n// цей селетор повертає к-сть спожитих жирів на вечерю (число)\nexport const selectConsumedFatForDinner = createSelector(\n  [selectConsumedProductsForDinner],\n  products => calculateSumMacronutrients(products, 'fat')\n);\n\n// цей селетор повертає к-сть спожитих вугеводів на перекус (число)\nexport const selectConsumedCarbonohidratesForSnack = createSelector(\n  [selectConsumedProductsForSnack],\n  products => calculateSumMacronutrients(products, 'carbohydrate')\n);\n\n// цей селетор повертає к-сть спожитих білків на перекус (число)\nexport const selectConsumedProteinForSnack = createSelector(\n  [selectConsumedProductsForSnack],\n  products => calculateSumMacronutrients(products, 'protein')\n);\n\n// цей селетор повертає к-сть спожитих жирів на перекус (число)\nexport const selectConsumedFatForSnack = createSelector(\n  [selectConsumedProductsForSnack],\n  products => calculateSumMacronutrients(products, 'fat')\n);\n\n// цей селетор повертає к-сть спожитих вуглеводів за день (число)\nexport const selectConsumedCarbonohidratesPerDay = createSelector(\n  [selectIntakeFoodPerDay],\n  products => calculateSumMacronutrients(products, 'carbohydrate')\n);\n\n// цей селетор повертає к-сть спожитих білків за день (число)\nexport const selectConsumedProteinPerDay = createSelector(\n  [selectIntakeFoodPerDay],\n  products => calculateSumMacronutrients(products, 'protein')\n);\n\n// цей селетор повертає к-сть спожитих жирів за день (число)\nexport const selectConsumedFatPerDay = createSelector(\n  [selectIntakeFoodPerDay],\n  products => calculateSumMacronutrients(products, 'fat')\n);\n\n// цей селетор повертає к-сть спожитих жирів за день (число)\nexport const selectConsumedCaloriesPerDay = createSelector(\n  [selectIntakeFoodPerDay],\n  products => calculateSumMacronutrients(products, 'calories')\n);\n\nexport const selectConsumedMacronutrientsPerDay = createSelector(\n  [\n    selectConsumedCarbonohidratesForBreakfast,\n    selectConsumedProteinForBreakfast,\n    selectConsumedFatForBreakfast,\n\n    selectConsumedCarbonohidratesForLunch,\n    selectConsumedProteinForLunch,\n    selectConsumedFatForLunch,\n\n    selectConsumedCarbonohidratesForDinner,\n    selectConsumedProteinForDinner,\n    selectConsumedFatForDinner,\n\n    selectConsumedCarbonohidratesForSnack,\n    selectConsumedProteinForSnack,\n    selectConsumedFatForSnack,\n  ],\n  (bc, bp, bf, lc, lp, lf, dc, dp, df, sc, sp, sf) => {\n    return {\n      breakfast: { carbonohidrates: bc, protein: bp, fat: bf },\n      lunch: { carbonohidrates: lc, protein: lp, fat: lf },\n      dinner: { carbonohidrates: dc, protein: dp, fat: df },\n      snack: { carbonohidrates: sc, protein: sp, fat: sf },\n    };\n  }\n);\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}"],"names":["DashboardSection","styled","_templateObject","_taggedTemplateLiteral","props","theme","colors","black","white","fontFamily","poppins","DashboardContainer","_templateObject2","mq","mobile","tablet","desktop","HeaderBlock","_templateObject3","MainHeaderBlock","_templateObject4","BackLink","NavLink","_templateObject5","ArrowReturn","_templateObject6","Header","_templateObject7","fontWeights","medium","fontSizes","xl","Button","_templateObject8","borders","none","ToggleButton","_templateObject9","black2","p","radii","normal","regular","s","l","Arrow","_templateObject10","SecondHeader","_templateObject11","m","LineChartBlock","_templateObject12","ChartGrid","_templateObject13","ScaleChartBlock","_templateObject14","monthName","full","short","List","Item","WeightTitle","DataTitle","gray","TitleContainer","ChartsTitle","ChartsSubtitle","xs","ChartsCaption","Chart","ChartLabelBlock","ChartLabelContent","Scale","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","_ref","dataFormat","type","_useState","useState","_useState2","_slicedToArray","time","setTime","_useState3","_useState4","information","setInformation","_useState5","_useState6","average","setAverage","info","useSelector","selectStatsInfo","useEffect","Object","keys","length","infoArray","timesArray","_i","_keys","key","_step","_iterator","_createForOfIteratorHelper","n","done","entry","value","push","_id","amount","err","e","f","_step2","_iterator2","entryMonth","Date","getMonth","count","Math","round","total","reduce","previousValue","number","caption","options","interaction","mode","intersect","responsive","plugins","legend","display","tooltip","enabled","position","external","context","chart","tooltipEl","canvas","parentNode","querySelector","tooltipTitle","opacity","_chart$canvas","positionX","offsetLeft","positionY","offsetTop","style","left","caretX","top","caretY","textContent","dataPoints","formattedValue","indexAxis","scales","x","alignToPixels","beginAtZero","offset","ticks","color","padding","font","family","size","grid","y","min","max","apply","_toConsumableArray","major","stepSize","callback","index","String","slice","concat","border","data","labels","datasets","borderColor","borderWidth","pointRadius","pointHoverBackgroundColor","hitRadius","pointHoverRadius","tension","drawActiveElementsOnTop","_jsxs","_Fragment","children","_jsx","Line","id","weight","setWeight","toFixed","newInfo","Number","map","_ref2","_location$state$from","_location$state","showYear","setShowYear","timeToggleBtn","setTimeToggleBtn","period","setPeriod","isLoading","selectStatsIsLoading","location","useLocation","backLinkLocationRef","useRef","state","from","dispatch","useDispatch","getStats","toggleBtn","currentMonth","currentYear","getFullYear","Loader","onClick","to","current","src","arrowRight","alt","arrowDown","transform","prevTime","LineChart","ScaleChart","stats","selectIntakeFoodPerDay","food","selectStatsConsumedWaterPerDay","createSelector","water","getProductsByMealType","products","inputMealType","filter","mealType","selectConsumedProductsForBreakfast","intakeFood","selectConsumedProductsForLunch","selectConsumedProductsForDinner","selectConsumedProductsForSnack","calculateSumMacronutrients","inputMacronutrient","acc","product","selectConsumedCarbonohidratesForBreakfast","selectConsumedProteinForBreakfast","selectConsumedFatForBreakfast","selectConsumedCarbonohidratesForLunch","selectConsumedProteinForLunch","selectConsumedFatForLunch","selectConsumedCarbonohidratesForDinner","selectConsumedProteinForDinner","selectConsumedFatForDinner","selectConsumedCarbonohidratesForSnack","selectConsumedProteinForSnack","selectConsumedFatForSnack","selectConsumedCarbonohidratesPerDay","selectConsumedProteinPerDay","selectConsumedFatPerDay","selectConsumedCaloriesPerDay","selectConsumedMacronutrientsPerDay","bc","bp","bf","lc","lp","lf","dc","dp","df","sc","sp","sf","breakfast","carbonohidrates","protein","fat","lunch","dinner","snack","_superPropBase","object","property","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","this"],"sourceRoot":""}