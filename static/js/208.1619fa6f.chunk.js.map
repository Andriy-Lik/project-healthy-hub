{"version":3,"file":"static/js/208.1619fa6f.chunk.js","mappings":"uRAEaA,EAAaC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+FAOvBC,EAAQH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oEAEnB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAGvBC,EAAMT,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,4RAehBS,EAAOX,EAAAA,GAAAA,GAASY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,wbAWV,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOM,MAAM,IACrC,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAUpBM,EAAYd,EAAAA,GAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,0BAGtBc,EAAMhB,EAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,8EAMhBgB,EAAQlB,EAAAA,GAAAA,EAAQmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,8BAGhBkB,EAAWpB,EAAAA,GAAAA,EAAQqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,qBACxB,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOe,IAAI,IAGnBC,EAAOvB,EAAAA,GAAAA,GAASwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,2UAiBhBuB,EAAezB,EAAAA,GAAAA,IAAU0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,4L,0kFChFvB,SAASyB,IACpB,OACIC,EAAAA,EAAAA,MAAC7B,EAAU,CAAA8B,SAAA,EACXC,EAAAA,EAAAA,KAAC3B,EAAK,CAAA0B,SAAC,sBACPD,EAAAA,EAAAA,MAACH,EAAY,CAAAI,SAAA,EACbC,EAAAA,EAAAA,KAACrB,EAAG,CAACsB,IAAKC,EAAOC,IAAI,sBACnBH,EAAAA,EAAAA,KAACP,EAAI,CAAAM,SACFK,EAAAA,KAAS,SAAAC,GAAiC,IAA/BC,EAAGD,EAAHC,IAAIC,EAAIF,EAAJE,KAAKC,EAAMH,EAANG,OAAQC,EAAQJ,EAARI,SAC3B,OACEX,EAAAA,EAAAA,MAACjB,EAAI,CAAAkB,SAAA,EACLC,EAAAA,EAAAA,KAACd,EAAG,CAACe,IAAKK,EAAKH,IAAKI,KACpBT,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAAD,SAAKQ,KACLT,EAAAA,EAAAA,MAACd,EAAS,CAAAe,SAAA,EACVC,EAAAA,EAAAA,KAACZ,EAAK,CAAAW,SAAES,KACRR,EAAAA,EAAAA,KAACV,EAAQ,CAAAS,SAAEU,YAKf,WAMZ,C","sources":["pages/RecommendedFoodPage/RecommendedFoodPage.styled.jsx","pages/RecommendedFoodPage/RecommendedFoodPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Background = styled.div`\nbackground-color: #050505;\nwidth: 100%;\nflex-direction: column;\ndisplay: flex;\n\n`\nexport const Title = styled.h1`\n  margin-top: 20px;\n  color: ${p => p.theme.colors.white};\n  margin-left: 34px;\n`\nexport const Img = styled.img`\nwidth: 300px;\nheight: 312px;\nmargin-top: 24px;\nmargin-right: 44px;\nmargin-left: 50px;\n@media (min-width: 320px) and (max-width: 833px)  {\n  width: 380px;\n  height: 396px;\n}\n@media (min-width: 834px) and (max-width: 1639px)  {\n  width: 436px;\n  height: 460px;\n}\n`\nexport const Item = styled.li`\nborder-radius: 12px;\nborder: 1px solid black;\ndisplay: flex;\njustify-content: flex-start;\nalign-items: center;\nwidth: 300px;\nheight: 86px;\nmargin-right: 20px;\nmargin-bottom: 20px;\nfont-size: 12px;\nbackground-color:${p => p.theme.colors.black2};\ncolor:${p => p.theme.colors.white};\n\n@media (min-width: 320px) and (max-width: 833px)  {\n  width: 380px;\n}\n@media (min-width: 834px) and (max-width: 1439px)  {\n  width: calc((100% - 60px) / 2);\n  max-width: 328px;\n}\n`\nexport const Container = styled.div`\ndisplay: flex;\n`\nexport const Svg = styled.img`\nwidth: 46px;\nheight: 46px;\nmargin-left:24px;\nmargin-right:20px;\n`\nexport const Parag = styled.p`\nmargin-right: 6px;\n`\nexport const ParagTwo = styled.p`\ncolor:${p => p.theme.colors.gray}\n`\n\nexport const List = styled.ul`\n\n@media (min-width: 320px) and (max-width: 1003px)  {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top:24px;\n}\n@media (min-width: 834px) and (max-width: 1639px)  {\n  display: flex;\nflex-direction: row;\nflex-wrap: wrap;\nalign-items: center;\nwidth: 800px;\n}\n`\nexport const ContainerTwo = styled.div`\ndisplay: flex;\njustify-content: space-around;\n\n@media (min-width: 320px) and (max-width: 1003px)  {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n`","import image from '../../images/Ketogenic.png'\nimport { Title, Img, Item, Container, Svg, Parag, List, ContainerTwo, ParagTwo, Background } from './RecommendedFoodPage.styled'\nimport food from './food.json';\n\nexport default function RecommendedFood(){\n    return(\n        <Background>\n        <Title>Recommented food</Title>\n        <ContainerTwo>\n        <Img src={image} alt=\"Recommended food\" />\n          <List>\n            {food.map(({img,name,amount, calories})=> {\n              return(\n                <Item>\n                <Svg src={img} alt={name} />\n                <div>\n                <h2>{name}</h2>\n                <Container>\n                <Parag>{amount}</Parag>\n                <ParagTwo>{calories}</ParagTwo>\n                </Container>\n                </div>\n            </Item>\n              )\n            })}\n            \n          </List>\n          </ContainerTwo>\n        </Background>\n    )\n}"],"names":["Background","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","p","theme","colors","white","Img","_templateObject3","Item","_templateObject4","black2","Container","_templateObject5","Svg","_templateObject6","Parag","_templateObject7","ParagTwo","_templateObject8","gray","List","_templateObject9","ContainerTwo","_templateObject10","RecommendedFood","_jsxs","children","_jsx","src","image","alt","food","_ref","img","name","amount","calories"],"sourceRoot":""}