{"version":3,"file":"static/js/607.435e5f26.chunk.js","mappings":"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","sources":["pages/DashboardPage/DashboardPage.styled.js","images/icons/arrow-right.svg","redux/Statistics/statisticsSelectors.js","components/Charts/LineChart.styled.js","components/Charts/LineChart.js","components/Charts/ScaleChart.styled.js","components/Charts/ScaleChart.js","pages/DashboardPage/DashboardPage.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const DashboardSection = styled.section`\n  background-color: ${props => props.theme.colors.black};\n  color: ${props => props.theme.colors.white};\n  font-family: ${props => props.theme.fontFamily.poppins};\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    padding-top: 16px;\n    padding-bottom: 60px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    padding-top: 24px;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    padding-top: 20px;\n    padding-bottom: 40px;\n  }\n`;\n\nexport const DashboardContainer = styled.div`\n  margin: 0 auto;\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 320px;\n    padding: 0 10px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 834px;\n    padding: 0 27px;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 1440px;\n    padding: 0 34px;\n  }\n`;\n\nexport const HeaderBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n`;\n\nexport const MainHeaderBlock = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nexport const BackLink = styled(NavLink)`\n  display: flex;\n  @media screen and (${props => props.theme.mq.mobile}) {\n    margin-right: 8px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    margin-right: 12px;\n  }\n`;\n\nexport const ArrowReturn = styled.img`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 16px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 24px;\n  }\n`;\n\nexport const Header = styled.h1`\n  font-weight: ${props => props.theme.fontWeights.medium};\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: 24px;\n    line-height: 1.25;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: ${props => props.theme.fontSizes.xl};\n    line-height: 1.2;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: 12px;\n  padding: 0;\n  border: ${props => props.theme.borders.none};\n  background-color: inherit;\n  color: inherit;\n`;\n\nexport const ToggleButton = styled.button`\n  position: absolute;\n  background-color: ${props => props.theme.colors.black2};\n  border: ${props => props.theme.borders.none};\n  padding: 16px 0 16px 12px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: 0px 4px 14px 0px #e3ffa833;\n  font-family: ${props => props.theme.fontFamily.poppins};\n  font-weight: ${props => props.theme.fontWeights.regular};\n  text-align: left;\n  color: inherit;\n  z-index: 1200;\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    top: 32px;\n    left: 24px;\n    width: 188px;\n    height: 52px;\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.38;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    top: 40px;\n    left: 36px;\n    width: 212px;\n    height: 64px;\n    font-size: ${props => props.theme.fontSizes.l};\n    line-height: 1.45;\n  }\n`;\n\nexport const Arrow = styled.img`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const SecondHeader = styled.h3`\n  font-weight: ${p => p.theme.fontWeights.medium};\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.38;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: 1.33;\n  }\n`;\n\nexport const LineChartBlock = styled.div`\n  display: flex;\n  @media screen and (${props => props.theme.mq.mobile}) {\n    flex-direction: column;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    flex-direction: row;\n    align-items: baseline;\n    justify-content: space-between;\n  }\n`;\n\nexport const ChartGrid = styled.div`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    display: flex;\n    flex-direction: column;\n    overflow-x: scroll;\n    &:not(:last-child) {\n      margin-bottom: 27px;\n    }\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    display: imline-block;\n    overflow-x: hidden;\n    &:not(:last-child) {\n      margin-bottom: 40px;\n    }\n  }\n`;\n\nexport const ScaleChartBlock = styled.div`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    display: flex;\n    flex-direction: column;\n    overflow-x: scroll;\n    margin-top: 27px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    margin-top: 40px;\n    overflow-x: hidden;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    margin-top: 20px;\n  }\n`;\n\n","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.57007 5.93018L3.50007 12.0002L9.57007 18.0702\",\n    stroke: \"#B6B6B6\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.5 12H3.67\",\n    stroke: \"#B6B6B6\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.be9bceed642802b11548c5b22d986ea8.svg\";\nexport { ForwardRef as ReactComponent };","export const selectStatsInfo = state => state.stats.info;\n","import styled from 'styled-components';\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  margin-bottom: 6px;\n`;\n\nexport const ChartsTitle = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: ${props => props.theme.fontSizes.m};\n    line-height: 1.44;\n    margin-right: 58px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: ${props => props.theme.fontSizes.l};\n    line-height: 1.45;\n    margin-right: 40px;\n  }\n`;\n\nexport const ChartsSubtitle = styled.p`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: 1.43;\n  margin-right: 8px;\n`;\n\nexport const ChartsCaption = styled.span`\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: 1.43;\n  color: ${props => props.theme.colors.gray};\n`;\n\nexport const Chart = styled.div`\n  background-color: ${props => props.theme.colors.black2};\n  border-radius: ${props => props.theme.radii.normal};\n  height: 382px;\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 676px;\n    padding: 25px 20px 24px 14px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 780px;\n    padding: 25px 31px 24px 14px;\n\n    & canvas {\n      min-width: 750px;\n      min-height: auto;\n      margin: 0 auto;\n    }\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 676px;\n    padding: 25px 20px 24px 14px;\n    & canvas {\n      min-width: 640px;\n      min-height: auto;\n    }\n  }\n`;\n\nexport const Scale = styled.div`\n  background-color: ${props => props.theme.colors.black2};\n  border-radius: ${props => props.theme.radii.normal};\n  height: 110px;\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 1372px;\n    padding: 24px 24px 36px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 780px;\n    padding: 24px 20px 44px;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 1372px;\n    padding: 24px 24px 36px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectStatsInfo } from '../../redux/Statistics/statisticsSelectors';\n\nimport {\n  TitleContainer,\n  ChartsTitle,\n  ChartsSubtitle,\n  ChartsCaption,\n  Chart,\n} from './LineChart.styled';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst LineChart = ({ dataFormat, type }) => {\n  const [time, setTime] = useState([]);\n  const [information, setInformation] = useState([]);\n  const [average, setAverage] = useState([]);\n\n  const info = useSelector(selectStatsInfo);\n\n  useEffect(() => {  \n\n    if (Object.keys(info).length === 0) {\n      return;\n    }\n\n    const infoArray = [];\n    const timesArray = [];\n    const averageValue = [];\n\n    if (Object.keys(info).length !== 0) {\n      const keys = Object.keys(info);\n\n      for (const key of keys) {\n        if (key === type) {\n          if (!dataFormat) {\n            for (const entry of info[key]) { \n              timesArray.push(entry._id);\n              infoArray.push(entry.amount);\n            }\n          }\n\n          if (dataFormat) {        \n            const monthShortName = {\n              1: 'Jan',\n              2: 'Feb',\n              3: 'Mar',\n              4: 'Apr',\n              5: 'May',\n              6: 'June',\n              7: 'July',\n              8: 'Aug',\n              9: 'Sep',\n              10: 'Oct',\n              11: 'Nov',\n              12: 'Dec',\n            };\n\n            for (const entry of info[key]) { \n              const entryMonth = new Date(entry._id).getMonth() + 1;      \n\n              const average = entry.amount / entry.count;\n\n              timesArray.push(monthShortName[entryMonth]);\n              infoArray.push(Math.round(average));            \n            }\n          }\n        }\n      }\n    }\n\n    const total = infoArray.reduce((previousValue, number) => {\n      return previousValue + number;\n    }, 0);\n    let totalAverageValue = Math.round(total / timesArray.length);\n    averageValue.push(totalAverageValue);\n\n    setInformation(infoArray);\n    setTime(timesArray);\n    setAverage(averageValue);\n  }, [info, dataFormat, type]);\n\n  let datasetsLabel = type === 'water' ? 'milliliters' : 'calories';\n  let caption = type === 'water' ? 'L' : 'K';\n  \n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        ticks: {\n          color: '#B6B6B6',\n        },\n        grid: {\n          display: true,\n          color: '#292928',\n          offset: true,\n        },\n      },\n      y: {\n        beginAtZero: true,\n        min: 0,\n        max: 3000,\n        ticks: {\n          major: {\n            enabled: true,\n          },\n          color: '#B6B6B6',\n          stepSize: 1000,\n          callback: function (value, index, ticks) {\n            if (String(value).length === 1) {\n              return value;\n            }\n            return String(value).slice(0, 1) + `${caption}`;\n          },\n        },\n        border: {\n          display: false,\n        },\n        grid: {\n          display: true,\n          color: '#292928',\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  const data = {\n    labels: time,\n    datasets: [\n      {\n        data: information,\n        label: `${datasetsLabel}`,\n        borderColor: '#E3FFA8',\n        borderWidth: 1,\n        pointRadius: 0,\n        tension: 0.5,\n        drawActiveElementsOnTop: true,\n      },\n    ],\n  };\n\n  return (\n    <>\n      <TitleContainer>\n        <ChartsTitle>{type === 'water' ? 'Water' : 'Calories'}</ChartsTitle>\n        <ChartsSubtitle>\n          Average value:{' '}\n          <ChartsCaption>\n            {average} {type === 'water' ? 'ml' : 'cal'}\n          </ChartsCaption>\n        </ChartsSubtitle>\n      </TitleContainer>\n      <Chart>\n        <Line options={options} data={data} />\n      </Chart>\n    </>\n  );\n};\n\nexport default LineChart;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Item = styled.li`\n  font-family: ${props => props.theme.fontFamily.poppins};\n  font-weight: ${props => props.theme.fontWeights.regular};\n  text-align: center;\n`;\n\nexport const WeightTitle = styled.p`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: 14px;\n    line-height: 1.43;\n    margin-bottom: 16px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: 10px;\n    line-height: 1.6;\n    margin-bottom: 12px;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    font-size: 14px;\n    line-height: 1.43;\n    margin-bottom: 16px;\n  }\n`;\nexport const DataTitle = styled.p`\n  font-size: 10px;\n  line-height: 1.4;\n  color: ${props => props.theme.colors.gray};\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectStatsInfo } from '../../redux/Statistics/statisticsSelectors';\nimport { List, Item, WeightTitle, DataTitle } from './ScaleChart.styled';\nimport {\n  TitleContainer,\n  ChartsTitle,\n  ChartsSubtitle,\n  ChartsCaption,\n  Scale,\n} from './LineChart.styled';\n\nconst ScaleChart = ({ dataFormat }) => {\n  const [weight, setWeight] = useState([]);\n  // const [average, setAverage] = useState([]);\n\n  const info = useSelector(selectStatsInfo);\n\n  useEffect(() => {\n    if (Object.keys(info).length === 0) {\n      return;\n    }\n\n    const infoArray = [];\n    const averageValue = [];\n\n    if (Object.keys(info).length !== 0) {\n      const keys = Object.keys(info);\n      for (const key of keys) {\n        if (key === 'weight') {\n          const value = [];\n\n          if (!dataFormat) {\n            for (const entry of info[key]) {            \n              value.push(entry.amount);            \n            }          \n\n            const total = value.reduce((previousValue, number) => {\n              return previousValue + number;\n            }, 0);\n            let totalAverageValue = Math.round(total / value.length);\n            averageValue.push(totalAverageValue); \n            setWeight(info[key]);\n          }\n\n          if (dataFormat) {         \n            const monthShortName = {\n              1: 'January',\n              2: 'February',\n              3: 'March',\n              4: 'April',\n              5: 'May',\n              6: 'June',\n              7: 'July',\n              8: 'August',\n              9: 'September',\n              10: 'October',\n              11: 'November',\n              12: 'December',\n            };\n\n            for (const entry of info[key]) {\n              console.log(entry);\n              const entryMonth = new Date(entry._id).getMonth() + 1;\n              // if (!entry.amount) {\n              //   console.log('ffffffff');\n              //   return;\n              // }\n\n              const average = (entry.amount / entry.count).toFixed(2);\n\n              if (!average) {\n                return console.log('NaN');\n              }\n\n              const newInfo = {\n                _id: monthShortName[entryMonth],\n                amount: average,\n              };\n\n              console.log(newInfo);\n              value.push(entry.average);\n              infoArray.push(newInfo);\n\n              return;\n            }\n\n            const total = value.reduce((previousValue, number) => {\n              return previousValue + number;\n            }, 0);\n            let totalAverageValue = Math.round(total / value.length);\n            averageValue.push(totalAverageValue);\n\n            setWeight(infoArray);\n          }\n        }\n      }\n    }\n  }, [dataFormat, info]);\n\n  return (\n    <>\n      <TitleContainer>\n        <ChartsTitle>Weight</ChartsTitle>\n        <ChartsSubtitle>\n          Average value: <ChartsCaption>68 kg</ChartsCaption>\n        </ChartsSubtitle>\n      </TitleContainer>\n      <Scale>\n        <List>\n          {weight.map(({ _id, amount }) => {\n            return (\n              <Item key={`${_id}+${amount}`}>\n                <WeightTitle>{amount}</WeightTitle>\n                <DataTitle>{_id}</DataTitle>\n              </Item>\n            );\n          })}\n        </List>\n      </Scale>\n    </>\n  );\n};\n\nexport default ScaleChart;\n","import { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { getStats } from '../../redux/Statistics/statisticsOperations';\n\nimport {\n  DashboardSection,\n  DashboardContainer,\n  HeaderBlock,\n  MainHeaderBlock,\n  BackLink,\n  ArrowReturn,\n  Header,\n  Button,\n  ToggleButton,\n  Arrow,\n  SecondHeader,\n  LineChartBlock,\n  ChartGrid,\n  ScaleChartBlock,\n} from './DashboardPage.styled';\n\nimport arrowDown from '../../images/icons/arrow-down.svg';\nimport arrowRight from '../../images/icons/arrow-right.svg';\nimport LineChart from 'components/Charts/LineChart';\nimport ScaleChart from 'components/Charts/ScaleChart';\n\nconst DashboardPage = () => {\n  const [showYear, setShowYear] = useState(false);\n  const [timeToggleBtn, setTimeToggleBtn] = useState(false);\n  const [period, setPeriod] = useState('month');\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getStats(period));\n  }, [dispatch, period]);\n\n  const toggleBtn = () => {\n    setTimeToggleBtn(timeToggleBtn => !timeToggleBtn);\n  };\n\n  const handleChange = () => {\n    setShowYear(showYear => !showYear);\n    setPeriod(prevTime => (prevTime === 'month' ? 'year' : 'month'));\n    toggleBtn();\n  };\n\n  return (\n    <DashboardSection>\n      <DashboardContainer>\n        <HeaderBlock>\n          <MainHeaderBlock>\n            <BackLink to={backLinkLocationRef.current}>\n              <ArrowReturn src={arrowRight} alt=\"arrow right\" />\n            </BackLink>\n            <Header>{showYear ? 'Last year' : 'Last month'}</Header>\n            <Button onClick={toggleBtn}>\n              <Arrow\n                src={arrowDown}\n                alt=\"arrow\"\n                style={{\n                  transform: timeToggleBtn ? 'rotate(180deg)' : 'rotate(0deg)',\n                }}\n              />\n            </Button>\n            {timeToggleBtn && (\n              <ToggleButton onClick={handleChange}>\n                {showYear ? 'Last month' : 'Last year'}\n              </ToggleButton>\n            )}\n          </MainHeaderBlock>\n          <SecondHeader>{showYear ? '2023' : 'November'}</SecondHeader>\n        </HeaderBlock>\n        <LineChartBlock>\n          <ChartGrid>\n            <LineChart dataFormat={showYear} type={'calories'} />\n          </ChartGrid>\n          <ChartGrid>\n            <LineChart dataFormat={showYear} type={'water'} />\n          </ChartGrid>\n        </LineChartBlock>\n        <ScaleChartBlock>\n          <ScaleChart dataFormat={showYear} />\n        </ScaleChartBlock>\n      </DashboardContainer>\n    </DashboardSection>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["DashboardSection","styled","_templateObject","_taggedTemplateLiteral","props","theme","colors","black","white","fontFamily","poppins","mq","mobile","tablet","desktop","DashboardContainer","_templateObject2","HeaderBlock","_templateObject3","MainHeaderBlock","_templateObject4","BackLink","NavLink","_templateObject5","ArrowReturn","_templateObject6","Header","_templateObject7","fontWeights","medium","fontSizes","xl","Button","_templateObject8","borders","none","ToggleButton","_templateObject9","black2","p","radii","normal","regular","s","l","Arrow","_templateObject10","SecondHeader","_templateObject11","m","LineChartBlock","_templateObject12","ChartGrid","_templateObject13","ScaleChartBlock","_templateObject14","selectStatsInfo","state","stats","info","TitleContainer","ChartsTitle","ChartsSubtitle","xs","ChartsCaption","gray","Chart","Scale","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","_ref","dataFormat","type","_useState","useState","_useState2","_slicedToArray","time","setTime","_useState3","_useState4","information","setInformation","_useState5","_useState6","average","setAverage","useSelector","useEffect","Object","keys","length","infoArray","timesArray","averageValue","_i","_keys","key","_step","_iterator","_createForOfIteratorHelper","n","done","entry","value","push","_id","amount","err","e","f","_step2","monthShortName","_iterator2","entryMonth","Date","getMonth","count","Math","round","total","reduce","previousValue","number","totalAverageValue","caption","options","responsive","scales","x","ticks","color","grid","display","offset","y","beginAtZero","min","max","major","enabled","stepSize","callback","index","String","slice","concat","border","plugins","legend","data","labels","datasets","label","borderColor","borderWidth","pointRadius","tension","drawActiveElementsOnTop","_jsxs","_Fragment","children","_jsx","Line","List","Item","WeightTitle","DataTitle","weight","setWeight","console","log","toFixed","newInfo","map","_ref2","_location$state$from","_location$state","showYear","setShowYear","timeToggleBtn","setTimeToggleBtn","period","setPeriod","location","useLocation","backLinkLocationRef","useRef","from","dispatch","useDispatch","getStats","toggleBtn","to","current","src","arrowRight","alt","onClick","arrowDown","style","transform","prevTime","LineChart","ScaleChart"],"sourceRoot":""}