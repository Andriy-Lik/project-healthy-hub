{"version":3,"file":"static/js/482.abc4fa9e.chunk.js","mappings":"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","sources":["pages/DashboardPage/DashboardPage.styled.js","images/icons/arrow-right.svg","constants/monthName.js","components/Charts/ScaleLineCharts.styled.js","components/Charts/LineChart.js","components/Charts/ScaleChart.js","pages/DashboardPage/DashboardPage.js","redux/Statistics/statisticsSelectors.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const DashboardSection = styled.section`\n  background-color: ${props => props.theme.colors.black};\n  color: ${props => props.theme.colors.white};\n  font-family: ${props => props.theme.fontFamily.poppins};\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    padding-top: 16px;\n    padding-bottom: 60px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    padding-top: 24px;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    padding-top: 20px;\n    padding-bottom: 40px;\n  }\n`;\n\nexport const DashboardContainer = styled.div`\n  margin: 0 auto;\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 320px;\n    padding: 0 10px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 834px;\n    padding: 0 27px;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 1440px;\n    padding: 0 34px;\n  }\n`;\n\nexport const HeaderBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n`;\n\nexport const MainHeaderBlock = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nexport const BackLink = styled(NavLink)`\n  display: flex;\n  @media screen and (${props => props.theme.mq.mobile}) {\n    margin-right: 8px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    margin-right: 12px;\n  }\n`;\n\nexport const ArrowReturn = styled.img`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 16px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 24px;\n  }\n`;\n\nexport const Header = styled.h1`\n  font-weight: ${props => props.theme.fontWeights.medium};\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: 24px;\n    line-height: 1.25;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: ${props => props.theme.fontSizes.xl};\n    line-height: 1.2;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: 12px;\n  padding: 0;\n  border: ${props => props.theme.borders.none};\n  background-color: inherit;\n  color: inherit;\n`;\n\nexport const ToggleButton = styled.button`\n  position: absolute;\n  background-color: ${props => props.theme.colors.black2};\n  border: ${props => props.theme.borders.none};\n  padding: 16px 0 16px 12px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: 0px 4px 14px 0px #e3ffa833;\n  font-family: ${props => props.theme.fontFamily.poppins};\n  font-weight: ${props => props.theme.fontWeights.regular};\n  text-align: left;\n  color: inherit;\n  z-index: 1200;\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    top: 32px;\n    left: 24px;\n    width: 188px;\n    height: 52px;\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.38;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    top: 40px;\n    left: 36px;\n    width: 212px;\n    height: 64px;\n    font-size: ${props => props.theme.fontSizes.l};\n    line-height: 1.45;\n  }\n`;\n\nexport const Arrow = styled.img`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const SecondHeader = styled.h3`\n  font-weight: ${p => p.theme.fontWeights.medium};\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.38;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: 1.33;\n  }\n`;\n\nexport const LineChartBlock = styled.div`\n  display: flex;\n  @media screen and (${props => props.theme.mq.mobile}) {\n    flex-direction: column;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    flex-direction: row;\n    align-items: baseline;\n    justify-content: space-between;\n  }\n`;\n\nexport const ChartGrid = styled.div`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    display: flex;\n    flex-direction: column;\n    overflow-x: scroll;\n    &:not(:last-child) {\n      margin-bottom: 27px;\n    }\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    display: imline-block;\n    overflow-x: hidden;\n    &:not(:last-child) {\n      margin-bottom: 40px;\n    }\n  }\n`;\n\nexport const ScaleChartBlock = styled.div`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    display: flex;\n    flex-direction: column;\n    overflow-x: scroll;\n    margin-top: 27px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    margin-top: 40px;\n    overflow-x: hidden;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    margin-top: 20px;\n  }\n`;\n\n","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.57007 5.93018L3.50007 12.0002L9.57007 18.0702\",\n    stroke: \"#B6B6B6\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.5 12H3.67\",\n    stroke: \"#B6B6B6\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.be9bceed642802b11548c5b22d986ea8.svg\";\nexport { ForwardRef as ReactComponent };","const full = {\n  1: 'January',\n  2: 'February',\n  3: 'March',\n  4: 'April',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'August',\n  9: 'September',\n  10: 'October',\n  11: 'November',\n  12: 'December',\n};\n\nconst short = {\n  1: 'Jan',\n  2: 'Feb',\n  3: 'Mar',\n  4: 'Apr',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'Aug',\n  9: 'Sep',\n  10: 'Oct',\n  11: 'Nov',\n  12: 'Dec',\n};\n\nexport const monthName = {\n  full,\n  short,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Item = styled.li`\n  font-family: ${props => props.theme.fontFamily.poppins};\n  font-weight: ${props => props.theme.fontWeights.regular};\n  text-align: center;\n`;\n\nexport const WeightTitle = styled.p`\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: 14px;\n    line-height: 1.43;\n    margin-bottom: 16px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: 10px;\n    line-height: 1.6;\n    margin-bottom: 12px;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    font-size: 14px;\n    line-height: 1.43;\n    margin-bottom: 16px;\n  }\n`;\nexport const DataTitle = styled.p`\n  font-size: 10px;\n  line-height: 1.4;\n  color: ${props => props.theme.colors.gray};\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  margin-bottom: 6px;\n`;\n\nexport const ChartsTitle = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  @media screen and (${props => props.theme.mq.mobile}) {\n    font-size: ${props => props.theme.fontSizes.m};\n    line-height: 1.44;\n    margin-right: 58px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    font-size: ${props => props.theme.fontSizes.l};\n    line-height: 1.45;\n    margin-right: 40px;\n  }\n`;\n\nexport const ChartsSubtitle = styled.p`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: 1.43;\n  margin-right: 8px;\n`;\n\nexport const ChartsCaption = styled.span`\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: 1.43;\n  color: ${props => props.theme.colors.gray};\n`;\n\nexport const Chart = styled.div`\n  background-color: ${props => props.theme.colors.black2};\n  border-radius: ${props => props.theme.radii.normal};\n  height: 382px;\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 676px;\n    padding: 25px 20px 24px 14px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 780px;\n    padding: 25px 31px 24px 14px;\n\n    & canvas {\n      min-width: 750px;\n      min-height: auto;\n      margin: 0 auto;\n    }\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 676px;\n    padding: 25px 20px 24px 14px;\n    & canvas {\n      min-width: 640px;\n      min-height: auto;\n    }\n  }\n`;\n\nexport const Scale = styled.div`\n  background-color: ${props => props.theme.colors.black2};\n  border-radius: ${props => props.theme.radii.normal};\n  height: 110px;\n\n  @media screen and (${props => props.theme.mq.mobile}) {\n    width: 1372px;\n    padding: 24px 24px 36px;\n  }\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 780px;\n    padding: 24px 20px 44px;\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 1372px;\n    padding: 24px 24px 36px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectStatsInfo } from '../../redux/Statistics/statisticsSelectors';\nimport { monthName } from '../../constants/monthName';\n\nimport {\n  TitleContainer,\n  ChartsTitle,\n  ChartsSubtitle,\n  ChartsCaption,\n  Chart,\n} from './ScaleLineCharts.styled.js';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst LineChart = ({ dataFormat, type }) => {\n  const [time, setTime] = useState([]);\n  const [information, setInformation] = useState([]);\n  const [average, setAverage] = useState([]);\n\n  const info = useSelector(selectStatsInfo);\n\n  useEffect(() => {\n    if (Object.keys(info).length === 0) {\n      return;\n    }\n\n    const infoArray = [];\n    const timesArray = [];\n    const averageValue = [];\n\n    if (Object.keys(info).length !== 0) {\n      const keys = Object.keys(info);\n\n      for (const key of keys) {\n        if (key === type) {\n          if (!dataFormat) {\n            for (const entry of info[key]) {\n              timesArray.push(entry._id);\n              infoArray.push(entry.amount);\n            }\n          }\n\n          if (dataFormat) {\n            for (const entry of info[key]) {\n              const entryMonth = new Date(entry._id).getMonth() + 1;\n\n              const average = entry.amount / entry.count;\n\n              timesArray.push(monthName.short[entryMonth]);\n              infoArray.push(Math.round(average));\n            }\n          }\n        }\n      }\n    }\n    const total = Math.round(\n      infoArray.reduce((previousValue, number) => {\n        return previousValue + number;\n      }, 0) / timesArray.length\n    );\n    averageValue.push(total);\n\n    setInformation(infoArray);\n    setTime(timesArray);\n    setAverage(averageValue);\n  }, [info, dataFormat, type]);\n\n  let datasetsLabel = type === 'water' ? 'milliliters' : 'calories';\n  let caption = type === 'water' ? 'L' : 'K';\n\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        beginAtZero: false,\n        offset: true,\n        ticks: {\n          color: '#B6B6B6',\n        },\n        grid: {\n          display: true,\n          color: '#292928',\n          offset: true,\n        },\n      },\n      y: {\n        beginAtZero: true,\n        min: 0,\n        max: 3000,\n        ticks: {\n          alignToPixels: true,\n          major: {\n            enabled: true,\n          },\n          color: '#B6B6B6',\n          stepSize: 1000,\n          callback: function (value, index, ticks) {\n            if (String(value).length === 1) {\n              return value;\n            }\n            return String(value).slice(0, 1) + `${caption}`;\n          },\n        },\n        border: {\n          display: false,\n        },\n        grid: {\n          display: true,\n          color: '#292928',\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  const data = {\n    labels: time,\n    datasets: [\n      {\n        data: information,\n        label: `${datasetsLabel}`,\n        borderColor: '#E3FFA8',\n        borderWidth: 1,\n        pointRadius: 1,\n        tension: 0.5,\n        drawActiveElementsOnTop: true,\n      },\n    ],\n  };\n\n  return (\n    <>\n      <TitleContainer>\n        <ChartsTitle>{type === 'water' ? 'Water' : 'Calories'}</ChartsTitle>\n        <ChartsSubtitle>\n          Average value:{' '}\n          <ChartsCaption>\n            {average} {type === 'water' ? 'ml' : 'cal'}\n          </ChartsCaption>\n        </ChartsSubtitle>\n      </TitleContainer>\n      <Chart>\n        <Line options={options} data={data} />\n      </Chart>\n    </>\n  );\n};\n\nexport default LineChart;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectStatsInfo } from '../../redux/Statistics/statisticsSelectors';\nimport { monthName } from '../../constants/monthName';\nimport {\n  List,\n  Item,\n  WeightTitle,\n  DataTitle,\n  TitleContainer,\n  ChartsTitle,\n  ChartsSubtitle,\n  ChartsCaption,\n  Scale,\n} from './ScaleLineCharts.styled';\n\nconst ScaleChart = ({ dataFormat }) => {\n  const [weight, setWeight] = useState([]);\n  const [average, setAverage] = useState([]);\n\n  const info = useSelector(selectStatsInfo);\n\n  useEffect(() => {\n    if (Object.keys(info).length === 0) {\n      return;\n    }\n\n    const infoArray = [];\n    const averageValue = [];\n\n    if (Object.keys(info).length !== 0) {\n      const keys = Object.keys(info);\n      for (const key of keys) {\n        if (key === 'weight') {\n          const value = [];\n\n          if (!dataFormat) {\n            for (const entry of info[key]) {\n              value.push(entry.amount);\n            }\n            setWeight(info[key]);\n          }\n\n          if (dataFormat) {\n            for (const entry of info[key]) {\n              const entryMonth = new Date(entry._id).getMonth() + 1;\n\n              if (!entry.count) {\n                return;\n              }\n\n              const average = (entry.amount / entry.count).toFixed(1);\n\n              if (average) {\n                const newInfo = {\n                  _id: monthName.full[entryMonth],\n                  amount: average,\n                };\n                infoArray.push(newInfo);\n                value.push(Number(average));\n              }\n            }\n            setWeight(infoArray);\n          }\n\n          const total = Math.round(\n            value.reduce((previousValue, number) => {\n              return previousValue + number;\n            }, 0) / value.length\n          );\n          averageValue.push(total);\n        }\n      }\n    }\n    setAverage(averageValue);\n  }, [dataFormat, info]);\n\n  return (\n    <>\n      <TitleContainer>\n        <ChartsTitle>Weight</ChartsTitle>\n        <ChartsSubtitle>\n          Average value: <ChartsCaption>{average} kg</ChartsCaption>\n        </ChartsSubtitle>\n      </TitleContainer>\n      <Scale>\n        <List>\n          {weight.map(({ _id, amount }) => {\n            return (\n              <Item key={`${_id}+${amount}`}>\n                <WeightTitle>{amount}</WeightTitle>\n                <DataTitle>{_id}</DataTitle>\n              </Item>\n            );\n          })}\n        </List>\n      </Scale>\n    </>\n  );\n};\n\nexport default ScaleChart;\n","import { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { getStats } from '../../redux/Statistics/statisticsOperations';\n\nimport {\n  DashboardSection,\n  DashboardContainer,\n  HeaderBlock,\n  MainHeaderBlock,\n  BackLink,\n  ArrowReturn,\n  Header,\n  Button,\n  ToggleButton,\n  Arrow,\n  SecondHeader,\n  LineChartBlock,\n  ChartGrid,\n  ScaleChartBlock,\n} from './DashboardPage.styled';\n\nimport arrowDown from '../../images/icons/arrow-down.svg';\nimport arrowRight from '../../images/icons/arrow-right.svg';\nimport LineChart from 'components/Charts/LineChart';\nimport ScaleChart from 'components/Charts/ScaleChart';\nimport { monthName } from '../../constants/monthName';\n\nconst DashboardPage = () => {\n  const [showYear, setShowYear] = useState(false);\n  const [timeToggleBtn, setTimeToggleBtn] = useState(false);\n  const [period, setPeriod] = useState('month');\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/main');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getStats(period));\n  }, [dispatch, period]);\n\n  const toggleBtn = () => {\n    setTimeToggleBtn(timeToggleBtn => !timeToggleBtn);\n  };\n\n  const handleChange = () => {\n    setShowYear(showYear => !showYear);\n    setPeriod(prevTime => (prevTime === 'month' ? 'year' : 'month'));\n    toggleBtn();\n  };\n\n  const currentMonth = monthName.full[new Date().getMonth() + 1];\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <DashboardSection>\n      <DashboardContainer>\n        <HeaderBlock>\n          <MainHeaderBlock>\n            <BackLink to={backLinkLocationRef.current}>\n              <ArrowReturn src={arrowRight} alt=\"arrow right\" />\n            </BackLink>\n            <Header>{showYear ? 'Last year' : 'Last month'}</Header>\n            <Button onClick={toggleBtn}>\n              <Arrow\n                src={arrowDown}\n                alt=\"arrow\"\n                style={{\n                  transform: timeToggleBtn ? 'rotate(180deg)' : 'rotate(0deg)',\n                }}\n              />\n            </Button>\n            {timeToggleBtn && (\n              <ToggleButton onClick={handleChange}>\n                {showYear ? 'Last month' : 'Last year'}\n              </ToggleButton>\n            )}\n          </MainHeaderBlock>\n          <SecondHeader>\n            {showYear ? `${currentYear}` : `${currentMonth}`}\n          </SecondHeader>\n        </HeaderBlock>\n        <LineChartBlock>\n          <ChartGrid>\n            <LineChart dataFormat={showYear} type={'calories'} />\n          </ChartGrid>\n          <ChartGrid>\n            <LineChart dataFormat={showYear} type={'water'} />\n          </ChartGrid>\n        </LineChartBlock>\n        <ScaleChartBlock>\n          <ScaleChart dataFormat={showYear} />\n        </ScaleChartBlock>\n      </DashboardContainer>\n    </DashboardSection>\n  );\n};\n\nexport default DashboardPage;\n","export const selectStatsInfo = state => state.stats.info;\n"],"names":["DashboardSection","styled","_templateObject","_taggedTemplateLiteral","props","theme","colors","black","white","fontFamily","poppins","mq","mobile","tablet","desktop","DashboardContainer","_templateObject2","HeaderBlock","_templateObject3","MainHeaderBlock","_templateObject4","BackLink","NavLink","_templateObject5","ArrowReturn","_templateObject6","Header","_templateObject7","fontWeights","medium","fontSizes","xl","Button","_templateObject8","borders","none","ToggleButton","_templateObject9","black2","p","radii","normal","regular","s","l","Arrow","_templateObject10","SecondHeader","_templateObject11","m","LineChartBlock","_templateObject12","ChartGrid","_templateObject13","ScaleChartBlock","_templateObject14","monthName","full","short","List","Item","WeightTitle","DataTitle","gray","TitleContainer","ChartsTitle","ChartsSubtitle","xs","ChartsCaption","Chart","Scale","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","_ref","dataFormat","type","_useState","useState","_useState2","_slicedToArray","time","setTime","_useState3","_useState4","information","setInformation","_useState5","_useState6","average","setAverage","info","useSelector","selectStatsInfo","useEffect","Object","keys","length","infoArray","timesArray","averageValue","_i","_keys","key","_step","_iterator","_createForOfIteratorHelper","n","done","entry","value","push","_id","amount","err","e","f","_step2","_iterator2","entryMonth","Date","getMonth","count","Math","round","total","reduce","previousValue","number","caption","options","responsive","scales","x","beginAtZero","offset","ticks","color","grid","display","y","min","max","alignToPixels","major","enabled","stepSize","callback","index","String","slice","concat","border","plugins","legend","data","labels","datasets","label","borderColor","borderWidth","pointRadius","tension","drawActiveElementsOnTop","_jsxs","_Fragment","children","_jsx","Line","weight","setWeight","toFixed","newInfo","Number","map","_ref2","_location$state$from","_location$state","showYear","setShowYear","timeToggleBtn","setTimeToggleBtn","period","setPeriod","location","useLocation","backLinkLocationRef","useRef","state","from","dispatch","useDispatch","getStats","toggleBtn","currentMonth","currentYear","getFullYear","to","current","src","arrowRight","alt","onClick","arrowDown","style","transform","prevTime","LineChart","ScaleChart","stats"],"sourceRoot":""}