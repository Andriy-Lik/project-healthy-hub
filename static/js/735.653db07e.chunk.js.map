{"version":3,"file":"static/js/735.653db07e.chunk.js","mappings":"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","sources":["pages/SignUpPage/SignUpPage.styled.jsx","pages/SignUpPage/SignUpPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  background-color: #050505;\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 320px) and (max-width: 833px) {\n    display: flex;\n    flex-direction: column;\n    margin: auto;\n  }\n\n  @media (min-width: 834px) and (max-width: 1439px) {\n    display: flex;\n    flex-direction: center;\n    margin: auto;\n  }\n\n  @media (min-width: 1440px) {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin: auto;\n  }\n`;\n\nexport const Image = styled.img`\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 40px;\n  margin-bottom: 40px;\n\n  @media (min-width: 320px) and (max-width: 833px) {\n    width: 300px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n\n  @media (min-width: 834px) and (max-width: 1439px) {\n    width: 380px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n\n  @media (min-width: 1439px) {\n    margin-right: 80px;\n    margin-left: 0;\n  }\n`;\n\nexport const ContentBox = styled.div`\n  max-width: 444px;\n  margin-top: 120px;\n  margin-left: 104px;\n\n  @media (min-width: 320px) and (max-width: 833px) {\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  @media (min-width: 834px) and (max-width: 1439px) {\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  @media (min-width: 1439px) {\n    width: 444px;\n    margin-left: 0;\n    margin-right: 120px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: #ffffff;\n  font-size: 30px;\n  font-weight: 500;\n  line-height: 36px;\n  font-family: Poppins;\n  \n  @media (min-width: 834px) and (max-width: 1439px) {\n    width: 100%;\n    text-align: center;\n    align-self: center;\n  }\n`;\n\nexport const Text = styled.p`\n  color: #b6b6b6;\n  font-weight: 400;\n  font-size: 22px;\n  margin-top: 16px;\n  line-height: 32px;\n  width: 280px;\n\n  @media (min-width: 834px) and (max-width: 1439px) {\n    width: 360px;\n    text-align: center;\n    align-self: center;\n    align-text: center;\n  }\n\n  @media (min-width: 1439px) {\n    width: 460px;\n  }\n`;\n\nexport const FormWrapper = styled.div`\n  width: 212px;\n`;\n\nexport const Form = styled.form`\n  margin-top: 8px;\n  align-self: center;\n  margin-right: auto;\n  margin-left: auto;\n  align-text: center;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #e3ffa8;\n  border-radius: 12px;\n  background-color: #0f0f0f;\n  width: 268px;\n  height: 36px;\n  color: #b6b6b6;\n  padding-left: 8px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-right: 8px;\n  margin-top: 16px;\n  align-self: center;\n  margin-right: auto;\n  margin-left: auto;\n\n  @media (min-width: 834px) and (max-width: 1439px) {\n    width: 380px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  background-color: #e3ffa8;\n  text-align: center;\n  margin-top: 16px;\n  border-radius: 12px;\n  width: 268px;\n  padding: 8px;\n  font-size: 14px;\n  font-family: Poppins;\n\n  @media (min-width: 320px) and (max-width: 833px) {\n    width: 300px;\n  }\n\n  @media (min-width: 834px) and (max-width: 1439px) {\n    width: 380px;\n  }\n`;\n\nexport const QuestionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 200px;\n\n  @media (min-width: 834px) {\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const QuestionText = styled.p`\n  color: #b6b6b6;\n\n  @media (min-width: 834px) {\n    margin-right: 20px;\n  }\n`;\n\nexport const SignInLink = styled(Link)`\n  background-color: #050505;\n  color: #ffffff;\n  border: none;\n  margin-top: 20px;\n  margin-bottom: 40px;\n\n  @media (min-width: 834px) {\n  margin: 0;\n  }\n`;","import { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { setNewUserName, setNewUserEmail, setNewUserPassword, } from 'redux/Auth/authSlice';\nimport {\n  Container,\n  Image,\n  ContentBox,\n  Title,\n  Text,\n  FormWrapper,\n  Form,\n  Input,\n  FormButton,\n  QuestionWrapper,\n  QuestionText,\n  SignInLink,\n} from './SignUpPage.styled';\nimport logoPic from '../../images/WelcomePageImg/logoPic.png';\n\nconst SignUpPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleNewUserData = event => {\n    event.preventDefault();\n    // console.log(`name: ${name}, e-mail: ${email}, password: ${password}`);\n    dispatch(setNewUserName(name));\n    dispatch(setNewUserEmail(email));\n    dispatch(setNewUserPassword(password));\n  };\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'email') {\n      setEmail(value);\n    } else {\n      setPassword(value);\n    }\n  };\n\n  return (\n    <div>\n      <Container>\n        <style>\n          @import\n          url('https://fonts.googleapis.com/css2?family=Poppins:wght@500&family=Roboto&display=swap');\n        </style>\n        <Image src={logoPic} alt=\"Logo\" />\n        <ContentBox>\n          <Title>Sign up</Title>\n          <Text>You need to register to use the service</Text>\n          <FormWrapper>\n            <Form onSubmit={handleNewUserData} autoComplete=\"off\">\n              <Input\n                placeholder=\"name\"\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                onChange={handleInputChange}\n              />\n              <Input\n                placeholder=\"e-mail\"\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={handleInputChange}\n              />\n              <Input\n                placeholder=\"password\"\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={handleInputChange}\n              />\n              <FormButton type=\"submit\" onClick={() => {navigate('/your-goal')}}>\n                Sign Up \n              </FormButton>\n            </Form>\n          </FormWrapper>\n\n          <QuestionWrapper>\n            <QuestionText>Do you already have an account?</QuestionText>\n            <SignInLink to={'/signin'}>Sign in</SignInLink>\n          </QuestionWrapper>\n        </ContentBox>\n      </Container>\n    </div>\n  );\n};\n\nexport default SignUpPage;"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Image","_templateObject2","ContentBox","_templateObject3","Title","_templateObject4","Text","_templateObject5","FormWrapper","_templateObject6","Form","_templateObject7","Input","_templateObject8","FormButton","_templateObject9","QuestionWrapper","_templateObject10","QuestionText","_templateObject11","SignInLink","Link","_templateObject12","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleInputChange","event","_event$target","target","value","_jsx","children","_jsxs","src","logoPic","alt","onSubmit","preventDefault","setNewUserName","setNewUserEmail","setNewUserPassword","autoComplete","placeholder","id","type","onChange","onClick","to"],"sourceRoot":""}