{"version":3,"file":"static/js/688.182680ea.chunk.js","mappings":"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","sources":["components/CustomRadioButton/CustomRadioButton.style.js","pages/YourGoalPage/YourGoalPage.styled.jsx","pages/YourGoalPage/YourGoalPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const RadioMark = styled.span`\n  min-width: 12px;\n  min-height: 12px;\n  border: 1px solid rgba(182, 182, 182, 1);\n  border-radius: 50%;\n  position: relative;\n\n  &:after {\n    content: '';\n    min-width: 6px;\n    min-height: 6px;\n    background-color: ${props => props.theme.colors.yellow};\n    border-radius: 50%;\n    position: absolute;\n    opacity: 0;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const RadioInput = styled(Field)`\n  display: none;\n  margin-right: 8px;\n\n  &:checked + ${RadioMark} {\n    &:after {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const LabelWithRadio = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  /* width: 100%; */\n  cursor: pointer;\n\n  &:hover > ${RadioMark} {\n    border-color: ${props => props.theme.colors.greenLite};\n  }\n`;\n","import styled from \"styled-components\";\nimport { Form } from 'formik';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: ${p => p.theme.colors.black};\n\n  @media (min-width: 320px) and (max-width: 833px) {\n    width: 300px;\n    margin: 24px auto 20px;\n    align-items: center;\n  }\n\n  @media (min-width: 834px) and (max-width: 1439px) {\n    width: 444px;\n    margin: 40px auto 366px;\n    align-items: center;\n  }\n\n  @media (min-width: 1440px) {\n    width: 1140px;\n    flex-direction: row;\n    justify-content: space-between;\n    margin: 40px auto 86px;\n  }\n`;\n\nexport const Image = styled.img`\n\n  @media (min-width: 320px) and (max-width: 833px) {\n    width: 300px;\n    margin-bottom: 24px;\n  }\n\n  @media (min-width: 834px) and (max-width: 1439px) {\n    width: 380px;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const ContentBox = styled.div`\n\n  @media (min-width: 320px) and (max-width: 833px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  @media (min-width: 834px) and (max-width: 1439px) {\n    width: 444px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  @media (min-width: 1440px) {\n    width: 444px;\n    margin-top: 80px;\n  }\n`;\n\nexport const Title = styled.h1`\n  width: 100%;\n  margin-bottom: 16px;\n  color: ${p => p.theme.colors.white};\n  font-family: ${p => p.theme.fontFamily.poppins};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xl};\n  line-height: 1.2;\n\n  @media (min-width: 320px) and (max-width: 833px) {\n    font-size: ${p => p.theme.fontSizes.l2};\n    line-height: 1.25;\n    text-align: center;\n  }\n\n  @media (min-width: 834px) and (max-width: 1439px) {\n    text-align: center;\n    align-self: center;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 24px;\n  color: ${p => p.theme.colors.gray};\n  font-family: ${p => p.theme.fontFamily.poppins};\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes.l};\n  line-height: 1.45;\n\n  @media (min-width: 320px) and (max-width: 833px) {\n    text-align: center;\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: 1.33;\n  }\n\n  @media (min-width: 834px) and (max-width: 1439px) {\n    text-align: center;\n  }\n`;\n\nexport const GoalForm = styled(Form)` \n  margin-top: 0;\n  margin-bottom: 20px;\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 24px;\n\n  @media (min-width: 834px) and (max-width: 1439px)  {\n    display: flex;\n    justify-content: space-between;\n    width: 380px;\n    margin: 0 auto 24px;\n  }\n`\n\nexport const Item = styled.li`\n  display: flex;\n  color: ${p => p.theme.colors.white};\n\n  @media (min-width: 320px) and (max-width: 833px) {\n    margin-bottom: 24px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    margin-bottom: 16px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport const ItemText = styled.span`\n  margin-left: 4px;\n  font-family: ${p => p.theme.fontFamily.poppins};\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n`;\n\nexport const NextButton = styled.button`\n  width: 300px;\n  height: 36px;\n  padding: 8px 10px;\n  font-family: ${p => p.theme.fontFamily.poppins}\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.none};\n  background-color: ${p => p.theme.colors.greenLite};\n\n  @media (min-width: 834px) and (max-width: 1439px) {\n    display: block;\n    width: 380px;\n    margin: 0 auto 20px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 212px;\n  }\n`;\n\nexport const BackButton = styled.button`\n  color: ${p => p.theme.colors.gray};\n  background-color: ${p => p.theme.colors.black};\n  width: 192px;\n  padding: 0;\n  border: ${p => p.theme.borders.none};\n  font-family: ${p => p.theme.fontFamily.poppins};\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n\n  @media (min-width: 1440px) {\n    margin-left: 10px;\n  }\n\n  @media (min-width: 834px) and (max-width: 1439px) {\n    margin: 0 auto;\n  }\n`;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setNewUserGoal } from 'redux/Auth/authSlice';\nimport { Formik } from 'formik';\n// import * as yup from 'yup';\nimport {\n  Container,\n  Image,\n  ContentBox,\n  Title,\n  Text,\n  GoalForm,\n  List,\n  Item,\n  ItemText,\n  NextButton,\n  BackButton,\n} from './YourGoalPage.styled';\nimport { LabelWithRadio, RadioMark, RadioInput  } from 'components/CustomRadioButton/CustomRadioButton.style';\nimport GoalLogoPic from '../../images/YourGoalLogo.png';\n\nconst YourGoalPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [goal, setGoal] = useState('');\n\n  const handleGoalResults = event => {\n    event.preventDefault();\n    console.log(`Goal: ${goal}`);\n    dispatch(setNewUserGoal(goal));\n  };\n\n  return (\n    <div>\n      <Container>\n        <Image src={GoalLogoPic} alt=\"Goal Logo\" />\n        <ContentBox>\n          <Title>Your goal</Title>\n          <Text>Choose a goal so that we can help you effectively</Text>\n          <Formik>\n            <GoalForm onSubmit={handleGoalResults}>\n              <List>\n                <Item>\n                  <LabelWithRadio>\n                    <RadioInput\n                      type=\"radio\"\n                      name=\"answer\"\n                      value=\"Lose fat\"\n                      checked={goal === 'Lose fat'}\n                      onChange={() => setGoal('Lose fat')}\n                    />\n                    <RadioMark />\n                  </LabelWithRadio>\n                  <ItemText>Lose fat</ItemText>\n                </Item>\n                \n                <Item>\n                  <LabelWithRadio>\n                    <RadioInput\n                      type=\"radio\"\n                      name=\"answer\"\n                      value=\"Maintain\"\n                      checked={goal === 'Maintain'}\n                      onChange={() => setGoal('Maintain')}\n                    />\n                    <RadioMark />\n                  </LabelWithRadio>\n                  <ItemText>Maintain</ItemText>\n                </Item>  \n                \n                <Item>\n                  <LabelWithRadio>\n                    <RadioInput\n                      type=\"radio\"\n                      name=\"answer\"\n                      value=\"Gain muscle\"\n                      checked={goal === 'Gain muscle'}\n                      onChange={() => setGoal('Gain muscle')}\n                    />\n                    <RadioMark />\n                  </LabelWithRadio>\n                  <ItemText>Gain muscle</ItemText>\n                </Item>\n              </List>\n              <NextButton onClick={() => {navigate('/select-gender')}}>Next</NextButton>\n            </GoalForm>\n          </Formik>\n          <BackButton  onClick={() => {navigate('/signup')}}>Back</BackButton>\n        </ContentBox>\n      </Container>\n    </div>\n  );\n};\n\nexport default YourGoalPage;"],"names":["RadioMark","styled","_templateObject","_taggedTemplateLiteral","props","theme","colors","yellow","RadioInput","Field","_templateObject2","LabelWithRadio","_templateObject3","greenLite","Container","p","black","Image","ContentBox","Title","_templateObject4","white","fontFamily","poppins","fontWeights","medium","fontSizes","xl","l2","Text","_templateObject5","gray","regular","l","m","GoalForm","Form","_templateObject6","List","_templateObject7","Item","_templateObject8","ItemText","_templateObject9","xs","NextButton","_templateObject10","radii","normal","borders","none","BackButton","_templateObject11","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","goal","setGoal","_jsx","children","_jsxs","src","GoalLogoPic","alt","Formik","onSubmit","event","preventDefault","console","log","concat","setNewUserGoal","type","name","value","checked","onChange","onClick"],"sourceRoot":""}